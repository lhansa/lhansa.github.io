<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Leonardo Hansa</title>
<link>https://lhansa.github.io/contenidos.html</link>
<atom:link href="https://lhansa.github.io/contenidos.xml" rel="self" type="application/rss+xml"/>
<description>Tips sobre análisis de datos</description>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Sun, 06 Oct 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>Ejemplo de regresión múltiple con Python</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-10-06-regresion-multiple-python/</link>
  <description><![CDATA[ 




<p>Aquí sigo un ejercicio de regresión lineal con Python del libro <em>Introduction to Statistical Learning with Python.</em></p>
<section id="regresión-simple" class="level2">
<h2 class="anchored" data-anchor-id="regresión-simple">Regresión simple</h2>
<section id="código-del-ajuste-del-modelo" class="level3">
<h3 class="anchored" data-anchor-id="código-del-ajuste-del-modelo">Código del ajuste del modelo</h3>
<div id="libs" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> subplots</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> statsmodels.api <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sm</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.stats.outliers_influence <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> variance_inflation_factor <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> VIF</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.stats.anova <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> anova_lm</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ISLP <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_data</span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ISLP.models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (ModelSpec <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> MS, summarize, poly)</span></code></pre></div>
</div>
<div id="cell-load-data" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">boston <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_data(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Boston'</span>)</span>
<span id="cb2-2">boston.head()</span></code></pre></div>
<div id="load-data" class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">crim</th>
<th data-quarto-table-cell-role="th">zn</th>
<th data-quarto-table-cell-role="th">indus</th>
<th data-quarto-table-cell-role="th">chas</th>
<th data-quarto-table-cell-role="th">nox</th>
<th data-quarto-table-cell-role="th">rm</th>
<th data-quarto-table-cell-role="th">age</th>
<th data-quarto-table-cell-role="th">dis</th>
<th data-quarto-table-cell-role="th">rad</th>
<th data-quarto-table-cell-role="th">tax</th>
<th data-quarto-table-cell-role="th">ptratio</th>
<th data-quarto-table-cell-role="th">lstat</th>
<th data-quarto-table-cell-role="th">medv</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0.00632</td>
<td>18.0</td>
<td>2.31</td>
<td>0</td>
<td>0.538</td>
<td>6.575</td>
<td>65.2</td>
<td>4.0900</td>
<td>1</td>
<td>296</td>
<td>15.3</td>
<td>4.98</td>
<td>24.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0.02731</td>
<td>0.0</td>
<td>7.07</td>
<td>0</td>
<td>0.469</td>
<td>6.421</td>
<td>78.9</td>
<td>4.9671</td>
<td>2</td>
<td>242</td>
<td>17.8</td>
<td>9.14</td>
<td>21.6</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>0.02729</td>
<td>0.0</td>
<td>7.07</td>
<td>0</td>
<td>0.469</td>
<td>7.185</td>
<td>61.1</td>
<td>4.9671</td>
<td>2</td>
<td>242</td>
<td>17.8</td>
<td>4.03</td>
<td>34.7</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>0.03237</td>
<td>0.0</td>
<td>2.18</td>
<td>0</td>
<td>0.458</td>
<td>6.998</td>
<td>45.8</td>
<td>6.0622</td>
<td>3</td>
<td>222</td>
<td>18.7</td>
<td>2.94</td>
<td>33.4</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>0.06905</td>
<td>0.0</td>
<td>2.18</td>
<td>0</td>
<td>0.458</td>
<td>7.147</td>
<td>54.2</td>
<td>6.0622</td>
<td>3</td>
<td>222</td>
<td>18.7</td>
<td>5.33</td>
<td>36.2</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Estos datos son un clásico, que incluso han tenido ya <em>haters</em> por no sé qué variable que hace al conjunto racista. Pero yo voy a seguir con el ejemplo de ISLP porque no me quiero complicar ahora.</p>
<p>El libro ajusta una regresión lineal de <code>'medv'</code> frente a <code>'lstat'</code>. Por supuesto, ni idea de qué es cada una. Pero solo quier practicar código Python; el resultado nos da igual.</p>
<div id="cell-datos" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'intercept'</span>: np.ones(boston.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]),</span>
<span id="cb3-2">                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lstat'</span>: boston[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lstat'</span>]})</span>
<span id="cb3-3"></span>
<span id="cb3-4">X.head()                  </span></code></pre></div>
<div id="datos" class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">intercept</th>
<th data-quarto-table-cell-role="th">lstat</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>1.0</td>
<td>4.98</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>1.0</td>
<td>9.14</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1.0</td>
<td>4.03</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>1.0</td>
<td>2.94</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>1.0</td>
<td>5.33</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>En <strong>statsmodels</strong> el <em>intercept</em> no se incluye por defecto y es el usuario quien tiene que incluirlo.</p>
<div id="cell-ols1" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boston[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'medv'</span>]</span>
<span id="cb4-2">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sm.OLS(y, X)</span>
<span id="cb4-3">results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit()</span>
<span id="cb4-4">results.summary()</span></code></pre></div>
<div id="ols1" class="cell-output cell-output-display" data-execution_count="4">
<table class="simpletable caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>OLS Regression Results</caption>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">Dep. Variable:</td>
<td>medv</td>
<td data-quarto-table-cell-role="th">R-squared:</td>
<td>0.544</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Model:</td>
<td>OLS</td>
<td data-quarto-table-cell-role="th">Adj. R-squared:</td>
<td>0.543</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Method:</td>
<td>Least Squares</td>
<td data-quarto-table-cell-role="th">F-statistic:</td>
<td>601.6</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Date:</td>
<td>Mon, 14 Oct 2024</td>
<td data-quarto-table-cell-role="th">Prob (F-statistic):</td>
<td>5.08e-88</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Time:</td>
<td>11:25:22</td>
<td data-quarto-table-cell-role="th">Log-Likelihood:</td>
<td>-1641.5</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">No. Observations:</td>
<td>506</td>
<td data-quarto-table-cell-role="th">AIC:</td>
<td>3287.</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Df Residuals:</td>
<td>504</td>
<td data-quarto-table-cell-role="th">BIC:</td>
<td>3295.</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Df Model:</td>
<td>1</td>
<td data-quarto-table-cell-role="th"></td>
<td></td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Covariance Type:</td>
<td>nonrobust</td>
<td data-quarto-table-cell-role="th"></td>
<td></td>
</tr>
</tbody>
</table>


<table class="simpletable caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<tbody>
<tr class="odd">
<td></td>
<td data-quarto-table-cell-role="th">coef</td>
<td data-quarto-table-cell-role="th">std err</td>
<td data-quarto-table-cell-role="th">t</td>
<td data-quarto-table-cell-role="th">P&gt;|t|</td>
<td data-quarto-table-cell-role="th">[0.025</td>
<td data-quarto-table-cell-role="th">0.975]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">intercept</td>
<td>34.5538</td>
<td>0.563</td>
<td>61.415</td>
<td>0.000</td>
<td>33.448</td>
<td>35.659</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">lstat</td>
<td>-0.9500</td>
<td>0.039</td>
<td>-24.528</td>
<td>0.000</td>
<td>-1.026</td>
<td>-0.874</td>
</tr>
</tbody>
</table>


<table class="simpletable caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">Omnibus:</td>
<td>137.043</td>
<td data-quarto-table-cell-role="th">Durbin-Watson:</td>
<td>0.892</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Prob(Omnibus):</td>
<td>0.000</td>
<td data-quarto-table-cell-role="th">Jarque-Bera (JB):</td>
<td>291.373</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Skew:</td>
<td>1.453</td>
<td data-quarto-table-cell-role="th">Prob(JB):</td>
<td>5.36e-64</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Kurtosis:</td>
<td>5.319</td>
<td data-quarto-table-cell-role="th">Cond. No.</td>
<td>29.7</td>
</tr>
</tbody>
</table>
<br><br>Notes:<br>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.
</div>
</div>
<p>Una forma más generalizable de preparar los datos es con la función <code>MS()</code>, que funciona al estilo <code>sklearn</code>. Pero es algo propio del libro así que no sé si le haré mucho caso.</p>
<div id="cell-fit-tranform" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">design <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MS([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lstat'</span>])</span>
<span id="cb5-2">design <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> design.fit(boston)</span>
<span id="cb5-3">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> design.transform(boston)</span>
<span id="cb5-4">X.head()</span></code></pre></div>
<div id="fit-tranform" class="cell-output cell-output-display" data-execution_count="5">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">intercept</th>
<th data-quarto-table-cell-role="th">lstat</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>1.0</td>
<td>4.98</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>1.0</td>
<td>9.14</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1.0</td>
<td>4.03</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>1.0</td>
<td>2.94</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>1.0</td>
<td>5.33</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>También se puede acortar con <code>fit_transform()</code>.</p>
<p>A partir del modelo, guardado en <code>results</code>, y un conjunto de datos, puedes obtener predicciones.</p>
<div id="21a25317" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">new_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lstat'</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>]})</span>
<span id="cb6-2">newX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> design.transform(new_df)</span>
<span id="cb6-3">newX</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">intercept</th>
<th data-quarto-table-cell-role="th">lstat</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>1.0</td>
<td>5</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>1.0</td>
<td>10</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1.0</td>
<td>15</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Y ahora predices:</p>
<div id="cell-predicciones" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">new_predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> results.get_prediction(newX)</span>
<span id="cb7-2">new_predictions.conf_int(alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>)</span></code></pre></div>
<div id="predicciones" class="cell-output cell-output-display" data-execution_count="7">
<pre><code>array([[29.7781697 , 29.82901852],
       [25.03485131, 25.07184337],
       [20.28485052, 20.32135063]])</code></pre>
</div>
</div>
</section>
<section id="gráfico" class="level3">
<h3 class="anchored" data-anchor-id="gráfico">Gráfico</h3>
<p>El primer gráfico muestra la regresión calculada.</p>
<div id="cell-plot-regression" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> abline(ax, b, m, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb9-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"Add a line with slope m and intercept b to ax"</span></span>
<span id="cb9-3">    xlim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.get_xlim()</span>
<span id="cb9-4">    ylim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> xlim[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b, m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> xlim[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b]</span>
<span id="cb9-5">    ax.plot(xlim, ylim, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb9-6"></span>
<span id="cb9-7">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boston.plot.scatter(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lstat'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'medv'</span>)</span>
<span id="cb9-8">abline(ax, </span>
<span id="cb9-9">       results.params[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb9-10">       results.params[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb9-11">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r--'</span>, </span>
<span id="cb9-12">       linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-10-06-regresion-multiple-python/index_files/figure-html/plot-regression-output-1.png" id="plot-regression" width="585" height="429" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>El segundo gráfico compara los residuos frente a los valores ajustados.</p>
<p>Parece que los valores ajustados más pequeños están asociados a residuos negativos y altos. En valores más altos de ajuste, hay residuos tanto positivos como negativos, pero se concentran muchos más en casos negativos.</p>
<div id="cell-residuals" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb10-2">ax.scatter(results.fittedvalues, results.resid)</span>
<span id="cb10-3">ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Fitted value'</span>)</span>
<span id="cb10-4">ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Residual'</span>)</span>
<span id="cb10-5">ax.axhline(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'k'</span>, ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-10-06-regresion-multiple-python/index_files/figure-html/residuals-output-1.png" id="residuals" width="670" height="651" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>El <em>leverage</em> es una métrica que indica cuánto se aleja un punto del centroide de toda la nube de puntos. Puntos muy alejados tendrán una mayor influencia en el cálculo del coeficiente que puntos cercanos.</p>
<p>El gráfico muestra el <em>leverage</em> contra el índice del punto, lo que ayuda a identificar puntos más influyentes (en el caso de una serie temporal, se podría ver como una evolución).</p>
<div id="plot-levarage" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">infl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> results.get_influence()</span>
<span id="cb11-2">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb11-3">ax.scatter(np.arange(X.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]), infl.hat_matrix_diag)</span>
<span id="cb11-4">ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Index'</span>)</span>
<span id="cb11-5">ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Leverage'</span>)</span>
<span id="cb11-6">np.argmax(infl.hat_matrix_diag)</span></code></pre></div>
<div id="plot-levarage-1" class="cell-output cell-output-display" data-execution_count="10">
<pre><code>374</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-10-06-regresion-multiple-python/index_files/figure-html/plot-levarage-output-2.png" id="plot-levarage-2" width="680" height="651" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="regresión-múltiple" class="level2">
<h2 class="anchored" data-anchor-id="regresión-múltiple">Regresión múltiple</h2>
<p>Ahora enfrentan <code>'medv'</code> a <code>'lstat'</code> y <code>'age'</code>.</p>
<div id="cell-multiple" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MS([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lstat'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age'</span>]).fit_transform(boston)</span>
<span id="cb13-2">model1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sm.OLS(y, X)</span>
<span id="cb13-3">results1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model1.fit()</span>
<span id="cb13-4">results1.summary()</span></code></pre></div>
<div id="multiple" class="cell-output cell-output-display" data-execution_count="11">
<table class="simpletable caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>OLS Regression Results</caption>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">Dep. Variable:</td>
<td>medv</td>
<td data-quarto-table-cell-role="th">R-squared:</td>
<td>0.551</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Model:</td>
<td>OLS</td>
<td data-quarto-table-cell-role="th">Adj. R-squared:</td>
<td>0.549</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Method:</td>
<td>Least Squares</td>
<td data-quarto-table-cell-role="th">F-statistic:</td>
<td>309.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Date:</td>
<td>Mon, 14 Oct 2024</td>
<td data-quarto-table-cell-role="th">Prob (F-statistic):</td>
<td>2.98e-88</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Time:</td>
<td>11:25:23</td>
<td data-quarto-table-cell-role="th">Log-Likelihood:</td>
<td>-1637.5</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">No. Observations:</td>
<td>506</td>
<td data-quarto-table-cell-role="th">AIC:</td>
<td>3281.</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Df Residuals:</td>
<td>503</td>
<td data-quarto-table-cell-role="th">BIC:</td>
<td>3294.</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Df Model:</td>
<td>2</td>
<td data-quarto-table-cell-role="th"></td>
<td></td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Covariance Type:</td>
<td>nonrobust</td>
<td data-quarto-table-cell-role="th"></td>
<td></td>
</tr>
</tbody>
</table>


<table class="simpletable caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<tbody>
<tr class="odd">
<td></td>
<td data-quarto-table-cell-role="th">coef</td>
<td data-quarto-table-cell-role="th">std err</td>
<td data-quarto-table-cell-role="th">t</td>
<td data-quarto-table-cell-role="th">P&gt;|t|</td>
<td data-quarto-table-cell-role="th">[0.025</td>
<td data-quarto-table-cell-role="th">0.975]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">intercept</td>
<td>33.2228</td>
<td>0.731</td>
<td>45.458</td>
<td>0.000</td>
<td>31.787</td>
<td>34.659</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">lstat</td>
<td>-1.0321</td>
<td>0.048</td>
<td>-21.416</td>
<td>0.000</td>
<td>-1.127</td>
<td>-0.937</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">age</td>
<td>0.0345</td>
<td>0.012</td>
<td>2.826</td>
<td>0.005</td>
<td>0.011</td>
<td>0.059</td>
</tr>
</tbody>
</table>


<table class="simpletable caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">Omnibus:</td>
<td>124.288</td>
<td data-quarto-table-cell-role="th">Durbin-Watson:</td>
<td>0.945</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Prob(Omnibus):</td>
<td>0.000</td>
<td data-quarto-table-cell-role="th">Jarque-Bera (JB):</td>
<td>244.026</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Skew:</td>
<td>1.362</td>
<td data-quarto-table-cell-role="th">Prob(JB):</td>
<td>1.02e-53</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Kurtosis:</td>
<td>5.038</td>
<td data-quarto-table-cell-role="th">Cond. No.</td>
<td>201.</td>
</tr>
</tbody>
</table>
<br><br>Notes:<br>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.
</div>
</div>


</section>

 ]]></description>
  <category>exploraciones</category>
  <guid>https://lhansa.github.io/posts/2024-10-06-regresion-multiple-python/</guid>
  <pubDate>Sun, 06 Oct 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Procesos ergódicos</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-10-04-ergodicidad/</link>
  <description><![CDATA[ 




<p><a href="https://www.datanalytics.com/2024/10/03/ergodicidad-utilitarismo/">Leo a Gil Bellosta</a> sobre ergocidad y he querido plantear lo que comenta.</p>
<p>El define la ergodicidad mucho mejor de lo que lo podría hacer yo, salvo que lo copiara. Pero para copiarlo, mejor ve a su web.</p>
<p>Planteo aquí el código de su ejemplo.</p>
<div id="libs" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span></code></pre></div>
</div>
<section id="lanzamiento-de-una-moneda" class="level2">
<h2 class="anchored" data-anchor-id="lanzamiento-de-una-moneda">Lanzamiento de una moneda</h2>
<div id="params" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">n_individuos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb2-2">n_veces <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span></code></pre></div>
</div>
<p>Tienes a <code>python n_individuos</code> que lanzan una moneda al aire <code>python n_veces</code> cada uno. Eso hace un total de <code>python n_individuos * n_veces</code> lanzamientos, en los que la probablidad teórica de obtener cara (resultado igual a 1 en este caso) es <img src="https://latex.codecogs.com/png.latex?0,5">.</p>
<div id="cell-sim-lanzamientos" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb3-2">lanzamientos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_individuos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_veces)</span>
<span id="cb3-3">lanzamientos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lanzamientos.reshape(n_individuos, n_veces)</span>
<span id="cb3-4">lanzamientos.shape</span></code></pre></div>
<div id="sim-lanzamientos" class="cell-output cell-output-display" data-execution_count="3">
<pre><code>(100, 1000)</code></pre>
</div>
</div>
<p>Este es un proceso estocástico ergódico porque:</p>
<ul>
<li>Para cualquier individuo <img src="https://latex.codecogs.com/png.latex?i">, la probabilidad de obtener cara en todos sus lanzamientos es 0,5, y</li>
<li>para cualquier lanzamiento <img src="https://latex.codecogs.com/png.latex?k">, la probabilidad de obtener cara entre los <img src="https://latex.codecogs.com/png.latex?k">-ésimos lanzamientos de todos los individuos es <img src="https://latex.codecogs.com/png.latex?0,5">.</li>
</ul>
<p>Por ejemplo, la probabilidad de obtener cara para el individuo 2 (el tercero, porque esto es Python y piensan raro) es:</p>
<div id="cell-individuo2" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">np.mean(lanzamientos[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, :])</span></code></pre></div>
<div id="individuo2" class="cell-output cell-output-display" data-execution_count="4">
<pre><code>0.494</code></pre>
</div>
</div>
<p>A su vez, la probabilidad de que obtengan cara entre todos los individuos en el lanzamiento 50 (el 51 xD) es:</p>
<div id="cell-lanzamiento50" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">np.mean(lanzamientos[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>])</span></code></pre></div>
<div id="lanzamiento50" class="cell-output cell-output-display" data-execution_count="5">
<pre><code>0.53</code></pre>
</div>
</div>
</section>
<section id="ejemplo-de-proceso-no-ergódico" class="level2">
<h2 class="anchored" data-anchor-id="ejemplo-de-proceso-no-ergódico">Ejemplo de proceso no ergódico</h2>
<p>Supón ahora este proceso:</p>
<ol type="1">
<li>Partes de un capital de 1.</li>
<li>Tiras una moneda al aire.</li>
<li>Si sale cara, multiplicas el capital por 1,5; si sale cruz, por 0,6</li>
<li>Ve al paso 2.</li>
</ol>
<p>La simulación de lanzamientos de monedas con sus resultados <img src="https://latex.codecogs.com/png.latex?1,5"> y <img src="https://latex.codecogs.com/png.latex?0,6"> se puede hacer así:</p>
<div id="multiplicadores" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">multiplicadores_capital <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>], size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_individuos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_veces)</span>
<span id="cb9-2">multiplicadores_capital <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> multiplicadores_capital.reshape(n_individuos, n_veces)</span></code></pre></div>
</div>
<p>Y la evolución del capital se calcula así:</p>
<div id="capital-evolution" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">capitales <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> multiplicadores_capital.cumprod(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<p>El capital de cada individuo (<code>python n_individuos</code>) empezaba en 1, por lo que el capital medio por individuo era de 1. Tras el primer lanzamiento, el capital medio queda en:</p>
<div id="cell-capital1" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">capitales[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].mean()</span></code></pre></div>
<div id="capital1" class="cell-output cell-output-display" data-execution_count="8">
<pre><code>1.0499999999999998</code></pre>
</div>
</div>
<p>Ten en cuenta que la media teórica sería <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1,50%20+%200,60%7D%7B2%7D%20=%201,05">.</p>
<p>La evolución de capitales medios:</p>
<div id="cell-capital-societario" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute mean per column on numpy array capitales</span></span>
<span id="cb13-2">evolucion_capital_medio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> capitales.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb13-3"></span>
<span id="cb13-4">plt.plot(evolucion_capital_medio[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, ], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#800080'</span>)</span>
<span id="cb13-5">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Tiempo'</span>)</span>
<span id="cb13-6">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Capital medio'</span>)</span>
<span id="cb13-7">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Evolución del capital medio'</span>)</span>
<span id="cb13-8">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-10-04-ergodicidad/index_files/figure-html/capital-societario-output-1.png" id="capital-societario" width="585" height="450" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Si pongo de límite hasta la tirada 100, el capital medio ha crecido:</p>
<div id="cell-tirada100" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">n_tirada <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb14-2">evolucion_capital_medio[n_tirada, ]</span></code></pre></div>
<div id="tirada100" class="cell-output cell-output-display" data-execution_count="10">
<pre><code>16.859029246380643</code></pre>
</div>
</div>
<p>Sin embargo, solo un 11% de los individuos ha visto su capital crecer:</p>
<div id="cell-tirada100-2" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">(capitales[:, n_tirada] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span></code></pre></div>
<div id="tirada100-2" class="cell-output cell-output-display" data-execution_count="11">
<pre><code>11</code></pre>
</div>
</div>
<p>En un proceso no ergódico (¿cuántos hay así en una sociedad occidental?), puedes ver crecimiento global, pero solo de unos pocos.</p>


</section>

 ]]></description>
  <category>exploraciones</category>
  <guid>https://lhansa.github.io/posts/2024-10-04-ergodicidad/</guid>
  <pubDate>Fri, 04 Oct 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Introducción práctica a Rust</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-09-08-rust/</link>
  <description><![CDATA[ 




<p>No tengo ni idea de Rust, pero he oído que es muy rápido y gestiona la RAM de manera más automática que C++. C++ es fácil de aprovechar con R para utilizar su velocidad pero me tienta probar cosas nuevas.</p>
<p>Para usar R y Rust <a href="https://extendr.github.io/rextendr/">he leído</a> sobre el paquete <strong>rextendr</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rextendr)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a Rust function</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rust_function</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fn add(a:f64, b:f64) -&gt; f64 { a + b }"</span>)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># call it from R</span></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.7</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 7.2</code></pre>
</div>
</div>
<p>Ese código básico funciona. Se ha creado un objeto nuevo <code>add</code> que es de tipo <code>function</code>.</p>
<section id="cálculo-de-r2-con-rust" class="level2">
<h2 class="anchored" data-anchor-id="cálculo-de-r2-con-rust">Cálculo de R2 con Rust</h2>
<p>Ahora creo una función que, dados dos vectores, calcule el R2 de ambos, como si uno fuese la predicción que un modelo hace para el otro.</p>
<p><strong>Observación.</strong> Yo no sé Rust pero ChatGPT y otras IIAA sí saben.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">code <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> r<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(</span></span>
<span id="cb3-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    #[extendr]</span></span>
<span id="cb3-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    fn calcula_r2_rust(actual: &amp;[f64], predicted: &amp;[f64]) -&gt; f64 {</span></span>
<span id="cb3-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">     </span></span>
<span id="cb3-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        let n = actual.len() as f64;</span></span>
<span id="cb3-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        let mean_actual = actual.iter().sum::&lt;f64&gt;() / n;</span></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        let ssr = actual.iter().enumerate().map(|(i, x)| (x - predicted[i]).powi(2)).sum::&lt;f64&gt;();</span></span>
<span id="cb3-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        let sst = actual.iter().map(|(x)| (x - mean_actual).powi(2)).sum::&lt;f64&gt;();</span></span>
<span id="cb3-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        1.0 - ssr / sst</span></span>
<span id="cb3-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb3-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    }</span></span>
<span id="cb3-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span></span>
<span id="cb3-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rust_source</span>(</span>
<span id="cb3-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">code =</span> code, </span>
<span id="cb3-16">)</span></code></pre></div>
</div>
<p>Ahora me invento unos <em>datos</em> y aplico la función.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">nsize <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span></span>
<span id="cb4-2">valor_real <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(nsize, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-3">valor_pred <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> valor_real <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(nsize, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_r2_rust</span>(valor_real, valor_pred)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.7492446</code></pre>
</div>
</div>
</section>
<section id="comparativa-de-tiempos-de-ejecución" class="level2">
<h2 class="anchored" data-anchor-id="comparativa-de-tiempos-de-ejecución">Comparativa de tiempos de ejecución</h2>
<p>Creo una función para calcular eso mismo con R.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">calcula_r2_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(actual, pred) {</span>
<span id="cb6-2">    numerador <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>((actual <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pred) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb6-3">    mean_actual <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(actual)</span>
<span id="cb6-4">    denominador <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>((actual <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mean_actual) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb6-5"></span>
<span id="cb6-6">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> numerador <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> denominador</span>
<span id="cb6-7">}</span>
<span id="cb6-8"></span>
<span id="cb6-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_r2_r</span>(valor_real, valor_pred)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.7492446</code></pre>
</div>
</div>
<p>Y ahora lo divertido, comparo tiempos. Que, por supuesto, no tienen ningún sentido.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">microbenchmark<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">microbenchmark</span>(</span>
<span id="cb8-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rust =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_r2_rust</span>(valor_real, valor_pred), </span>
<span id="cb8-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_r2_r</span>(valor_real, valor_pred)</span>
<span id="cb8-4">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Unit: milliseconds
 expr      min       lq     mean   median       uq      max neval
 rust 60.86050 62.41938 67.36861 64.71865 72.43868 86.67186   100
    r 16.77276 17.47662 24.79657 23.71143 30.52387 50.23770   100</code></pre>
</div>
</div>
<p>Ya, otro día comparo con Rcpp y lo llevo a Python.</p>


</section>

 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-09-08-rust/</guid>
  <pubDate>Sun, 08 Sep 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Más sobre evaluación de expresiones en R</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-08-23-sin-comillas/</link>
  <description><![CDATA[ 




<section id="orden-de-operaciones" class="level2">
<h2 class="anchored" data-anchor-id="orden-de-operaciones">Orden de operaciones</h2>
<p>En R puedes evaluar una expresión a partir de texto (o sea, como si la expresión fuera un objeto de tipo <code>character</code>).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-2">b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb1-3"></span>
<span id="cb1-4">expr1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a + b"</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> expr1))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4</code></pre>
</div>
</div>
<p>Esa expresión es la operación <img src="https://latex.codecogs.com/png.latex?a%20+%20b">. También podrías tener la operación <img src="https://latex.codecogs.com/png.latex?2%5Ccdot%20a%20-%203%20%5Ccdot%20b">, que podrías guardar en un objeto <code>character</code> de forma parecida a la anterior.</p>
<p>De manera intuitiva, si quieres <em>juntar</em> o <em>concatenar</em> las dos operaciones mediante una división, ¿qué operación te sale?</p>
<p>A mí me sale esta: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Ba%20+%20b%7D%7B2%5Ccdot%20a%20-%203%20%5Ccdot%20b%7D">, que no es la misma que <img src="https://latex.codecogs.com/png.latex?a%20+%20%5Cfrac%7Bb%7D%7B2%5Ccdot%20a%7D%20-%203%20%5Ccdot%20b">.</p>
<p>Pero si no tienes cuidado, para R sí lo será:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">expr2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2 * a - 3 * b"</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">expr_division <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(expr1, expr2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" / "</span>)</span>
<span id="cb3-4">expr_division</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "a + b / 2 * a - 3 * b"</code></pre>
</div>
</div>
<p>El resultado de esa operación es -6.5, que no es lo mismo que:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">(a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -0.5714286</code></pre>
</div>
</div>
</section>
<section id="solución-con-rlang" class="level1">
<h1>Solución con rlang</h1>
<p>Si trabajas con operaciones puedes hacer esto sin gestionar los paréntesis.</p>
<p>Tampoco te voy a decir que sea fácil, la verdad, pero me parece más práctico:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rlang)</span>
<span id="cb7-2">expr1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expr</span>(a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b)</span>
<span id="cb7-3">expr2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b)</span>
<span id="cb7-4">expr_division  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expr</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span>expr1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span>expr2) </span>
<span id="cb7-5">expr_division</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(a + b)/(2 * a - 3 * b)</code></pre>
</div>
</div>
<p>Ahora evalúas la expresión:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_tidy</span>(expr_division)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -0.5714286</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-08-23-sin-comillas/</guid>
  <pubDate>Fri, 23 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Evaluación de expresiones en R</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-08-17-evaluacion-expresiones/</link>
  <description><![CDATA[ 




<p>Levanta la mano si a ti también te gusta concatenar caracteres con <code>+</code> como en Python.</p>
<p>Me refiero a que en Python puedes hacer <code>'Hola ' + ' Leo'</code> pero en R no.</p>
<p>¿O sí?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hola, puedo "</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"concatenar"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "hola, puedo concatenar"</code></pre>
</div>
</div>
<p>Pero:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4</code></pre>
</div>
</div>
<section id="justificación-de-quosures" class="level2">
<h2 class="anchored" data-anchor-id="justificación-de-quosures">Justificación de <code>quosures</code></h2>
<p>La idea detrás de funciones como <code>base::subset()</code> o <code>dplyr::mutate()</code> es que puedes escribir operaciones dentro de data frames haciendo referencia directamente a las columnas, sin usar la sintaxis <code>df$columna</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rlang)</span>
<span id="cb5-2">opera <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, entrada) {</span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_tidy</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enexpr</span>(entrada), data)</span>
<span id="cb5-4">}</span>
<span id="cb5-5"></span>
<span id="cb5-6">nuevo_calculo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">opera</span>(iris, Sepal.Length <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Sepal.Width)</span>
<span id="cb5-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(nuevo_calculo)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 8.6 7.9 7.9 7.7 8.6 9.3</code></pre>
</div>
</div>
<p>El inconveniente es que <code>enexpr()</code> puede no ser suficiente porque no tiene en cuenta información del entorno.</p>
<p>Por ejemplo:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>))</span>
<span id="cb7-2">factor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb7-3"></span>
<span id="cb7-4">opera2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, entrada) {</span>
<span id="cb7-5">  factor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_tidy</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enexpr</span>(entrada), data)</span>
<span id="cb7-7">}</span>
<span id="cb7-8"></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Con enquo no sabes cuál es el entorno original de la variable</span></span>
<span id="cb7-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">opera2</span>(df, col1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> factor)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 50 60 70</code></pre>
</div>
</div>
<p>Una solución que se te puede ocurrir es: <em>no pongas en la expresión variables que estén definidas en la función</em>. Ya, ¿y si no sabes lo que hay en la función? ¿Y si el código es tan largo que no te da para revisarlo?</p>
<p>Pues lo arreglas con <code>enquo()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>))</span>
<span id="cb9-2">factor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb9-3"></span>
<span id="cb9-4">opera3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, entrada) {</span>
<span id="cb9-5">  factor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_tidy</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(entrada), data)</span>
<span id="cb9-7">}</span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Con enquo usas el entorno donde se definió la variable original</span></span>
<span id="cb9-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">opera3</span>(df, col1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> factor)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 10 12 14</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-08-17-evaluacion-expresiones/</guid>
  <pubDate>Sat, 17 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Estadísticos en regresión lineal por variable</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-08-16-estadisticos-regresion/</link>
  <description><![CDATA[ 




<section id="intro-y-datos" class="level2">
<h2 class="anchored" data-anchor-id="intro-y-datos">Intro y datos</h2>
<p>Voy a revisar aquí cómo se calcula el p-valor de una variable en una regresión lineal, porque es una cosa que siempre se me olvida. Y quiero tenerlo a mano.</p>
<p>Además, lo voy a hacer en Python porque me gusta sufrir.</p>
<div id="libs" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> statsmodels.api <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sm</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> stats</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span></code></pre></div>
</div>
<p>Me invento unos datos que me sirvan para ajustar una regresión lineal:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay%20=%20%5Cbeta_0%20+%20%5Cbeta_1%20%5Ccdot%20x%20+%20%5Cvarepsilon,%0A"></p>
<p>donde <img src="https://latex.codecogs.com/png.latex?%5Cbeta_0%20=%20-%205">, <img src="https://latex.codecogs.com/png.latex?%5Cbeta_1%20=%203"> y <img src="https://latex.codecogs.com/png.latex?x%20~%20%5Cmbox%7BPoisson(12)%7D"> y <img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon%20%5Csim%20%5Ccal%7BN%7D(0,%2010)">.</p>
<div id="generate-data" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">nobs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span></span>
<span id="cb2-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.poisson(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, nobs)</span>
<span id="cb2-3">noise <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, nobs)</span>
<span id="cb2-4"></span>
<span id="cb2-5">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> noise</span></code></pre></div>
</div>
<p>Ahora ajusto la regresión lineal con <strong>statsmodels</strong>. ¿Se puede hacer con <strong>sklearn</strong>? Pues imagino que sí, pero necesitaré luego acceder a detalles del modelo a los que no sé acceder con sklearn.</p>
<div id="fit-model" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sm.add_constant(x)</span>
<span id="cb3-2">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sm.OLS(y, X).fit()</span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(model.summary())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                            OLS Regression Results                            
==============================================================================
Dep. Variable:                      y   R-squared:                       0.527
Model:                            OLS   Adj. R-squared:                  0.527
Method:                 Least Squares   F-statistic:                 1.115e+04
Date:                Mon, 19 Aug 2024   Prob (F-statistic):               0.00
Time:                        23:37:26   Log-Likelihood:                -37190.
No. Observations:               10000   AIC:                         7.438e+04
Df Residuals:                    9998   BIC:                         7.440e+04
Df Model:                           1                                         
Covariance Type:            nonrobust                                         
==============================================================================
                 coef    std err          t      P&gt;|t|      [0.025      0.975]
------------------------------------------------------------------------------
const         -5.0025      0.357    -14.009      0.000      -5.702      -4.303
x1             3.0140      0.029    105.585      0.000       2.958       3.070
==============================================================================
Omnibus:                        7.083   Durbin-Watson:                   2.023
Prob(Omnibus):                  0.029   Jarque-Bera (JB):                7.775
Skew:                          -0.014   Prob(JB):                       0.0205
Kurtosis:                       3.134   Cond. No.                         45.0
==============================================================================

Notes:
[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.</code></pre>
</div>
</div>
<p>Para calcular el p-valor de <img src="https://latex.codecogs.com/png.latex?x"> en el modelo necesito el estadístico <img src="https://latex.codecogs.com/png.latex?t">. Para eso necesito, aparte del valor del coeficiente, el error estándar de la variable.</p>
</section>
<section id="error-estándar" class="level2">
<h2 class="anchored" data-anchor-id="error-estándar">Error estándar</h2>
<p>Este error estándar relaciona la varianza de la variable con la varianza de los errores:</p>
<ul>
<li>Si una variable tiene poca varianza y los errores tienen mucha, la variable está aportando poco al modelo.</li>
<li>Si una variable tiene una varianza alta, estará contribuyendo más al modelo.</li>
<li>Si un modelo tiene errores con varianza baja, el error estándar de la variable tenderá a ser bajo.</li>
</ul>
<blockquote class="blockquote">
<p>Cuanto mayor sea el error estándar, menor siginificatividad tendrá la variable. Por lo tanto, con un varianza del error pequeña, más fácil será que la variable aparezca significativa.</p>
</blockquote>
<div id="standard-error" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">standard_error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.sqrt(np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(model.resid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb5-2">standard_error_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> standard_error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> np.sqrt(nobs)  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> np.std(x)</span></code></pre></div>
</div>
<p>El error estándar de los residuos es 9.975818941126349 y el de la variable es 0.028545857080981202.</p>
<blockquote class="blockquote">
<p>El error estándar del intercept es más lío de calcular e interpretar; la idea intuitiva es que tiene en cuenta la varianza de todas las variables explicativas a la vez.</p>
</blockquote>
<div id="cell-standard-error-int" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">standard_error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> nobs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.mean(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>((x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> np.mean(x)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
<div id="standard-error-int" class="cell-output cell-output-display" data-execution_count="5">
<pre><code>0.3570820876215312</code></pre>
</div>
</div>
</section>
<section id="estadístico-t" class="level2">
<h2 class="anchored" data-anchor-id="estadístico-t">Estadístico <img src="https://latex.codecogs.com/png.latex?t"></h2>
<p>El estadístico <img src="https://latex.codecogs.com/png.latex?t"> se calcula como</p>
<p><img src="https://latex.codecogs.com/png.latex?%0At%20=%20%5Cfrac%7B%5Cmbox%7Bcoef%7D%5C%20x%7D%7B%5Cmbox%7Bstd%20error%7D%5C%20x%7D.%0A"></p>
<ul>
<li>Si la variable tiene un error pequeño, el estadístico crece (eso es bueno para la significatividad de la variable).</li>
<li>A su vez, si el coeficiente es alto (en valor absoluto), entonces también crece.</li>
<li>El estadístico decrece con coeficientes bajos o con errores altos (es decir, la variable parecerá no significativa).</li>
</ul>
<div id="4d9e3c12" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># label: t-stat</span></span>
<span id="cb8-2">t_stat_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(model.params[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> standard_error_x</span>
<span id="cb8-3">t_stat_x</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>105.58474083439029</code></pre>
</div>
</div>
</section>
<section id="p-valor" class="level2">
<h2 class="anchored" data-anchor-id="p-valor">p-valor</h2>
<p>Ahora hay que ver qué valor es esperable para el estadístico <img src="https://latex.codecogs.com/png.latex?t">.</p>
<p>Pon que trabajas al nivel de confianza del 90%. Hace falta calcular el <img src="https://latex.codecogs.com/png.latex?t"> que deja el 5% a un lado de la distribución, y el que lo deja al otro lado. Como la distribución es simétrica, solo calculo uno:</p>
<div id="8fdabede" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">percentile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.t.ppf(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>, nobs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb10-2">percentile</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>1.6450060485564049</code></pre>
</div>
</div>
<p>Ahora tienes la distribución de <img src="https://latex.codecogs.com/png.latex?t">. Si <img src="https://latex.codecogs.com/png.latex?t"> cae en el área sombreada (el 10% extremo) entonces la probabilidad de observar tus datos en el supuesto de que la variable no sea significativa (<img src="https://latex.codecogs.com/png.latex?H_0"> o <img src="https://latex.codecogs.com/png.latex?%5Cbeta_1%20=%200">) es menor de 0,10.</p>
<div id="cell-t-distribution" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb12-2">yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.t.pdf(xx, nobs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb12-3">plt.plot(xx, yy, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#800080'</span>)</span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot the t distribution and fill the 5% outside </span></span>
<span id="cb12-5">plt.fill_between(xx, yy, where<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>percentile) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> percentile), alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#800080'</span>)</span>
<span id="cb12-6">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distribución de t"</span>)</span>
<span id="cb12-7">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-08-16-estadisticos-regresion/index_files/figure-html/t-distribution-output-1.png" id="t-distribution" width="579" height="431" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Concretamente, la probabilidad para el estadístico <img src="https://latex.codecogs.com/png.latex?t"> que has obtenido es muy muy baja.</p>
<div id="0d1b6ed0" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># p value for coefficient, extracted from</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># t distribution</span></span>
<span id="cb13-3">stats.t.sf(t_stat_x, nobs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>0.0</code></pre>
</div>
</div>
</section>
<section id="idea-intuitiva" class="level2">
<h2 class="anchored" data-anchor-id="idea-intuitiva">Idea intuitiva</h2>
<p>Lo que estás haciendo con esto es calcular la probabilidad de obtener los datos que tienes si asumes que las dos variables no tienen relación.</p>
<p>Imagina que estás midiendo la relación entre el consumo de torreznos (gramos de torreznos semanales) y los niveles de colesterol (ni idea de qué unidad se usa en los análisis).</p>
<p>La forma de pensar con este análisis sería:</p>
<ul>
<li>Asumes que no hay relación</li>
<li>Tienes unos datos de varias personas, con su consumo de torreznos y el nivel de colesterol.</li>
<li>Haces el cálculo de la regresión.</li>
<li>El p-valor es cómo de probables son tus datos.</li>
<li>Si tu p-valor es pequeño, entonces los datos son poco probables en el supuesto de que no haya relación. Así que deduces que sí hay relación.</li>
</ul>
<p><strong>¿Qué quiero decir con que tu p-valor sea pequeño?</strong></p>
<p>Me refiero a que, previamente, habrás definido un umbral. Que tu p-valor sea pequeño significa que está por debajo de ese umbral.</p>
<p>¿Cuál debería ser tu umbral? Normalmente es 0,05. Eso se traduce en que:</p>
<ul>
<li>Si la probabilidad de observar tus datos en el supuesto de que no hay relación (p-valor) es menor de 0,05, entonces es que sí hay relación.</li>
<li>Si la probabilidad (p-valor) es mayor, entonces es que no hay relación.</li>
</ul>
<p>Y te pregunto yo. ¿Cuál debería ser para ti la probabilidad? Por ejemplo, si el p-valor es 0,20, ¿automáticamente concluyes que no hay relación?</p>
<p>¿Por qué?</p>
<p>Si tu p-valor es ese, estarías diciendo que la probabilidad de observar tus datos cuando no hubiera relación real es de un 20%. Quizá en un caso médico tienes que tener cuidado, como con lo del colesterol. ¿Pero qué pasa si estás midiendo la eficacia de una acción empresarial?</p>
</section>
<section id="un-ejemplo-más-extremo" class="level2">
<h2 class="anchored" data-anchor-id="un-ejemplo-más-extremo">Un ejemplo más extremo</h2>
<p>En lugar de utilizar la propia variable <img src="https://latex.codecogs.com/png.latex?x"> para ajustar el modelo, podemos alterar <img src="https://latex.codecogs.com/png.latex?x"> introduciendo ruido en ella. Eso lo haré metiendo ruido en la variable, con media 0 y una desviación típica que variaré en varias pruebas.</p>
<p>Por ahora, la desviación típica del ruido sobre <img src="https://latex.codecogs.com/png.latex?x"> es 1.</p>
<div id="cell-genera-escenario" class="cell" data-execution_count="10">
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-08-16-estadisticos-regresion/index_files/figure-html/genera-escenario-output-1.png" id="genera-escenario" width="579" height="431" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Voy a poner mucho más ruido. Fíjate en cuánto decrece el estadístico <img src="https://latex.codecogs.com/png.latex?t"> (y en consecuencia cuánto aumenta el p-valor).</p>
<div id="cell-genera-escenario2" class="cell" data-execution_count="11">
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-08-16-estadisticos-regresion/index_files/figure-html/genera-escenario2-output-1.png" id="genera-escenario2" width="579" height="431" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-genera-escenario3" class="cell" data-execution_count="12">
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-08-16-estadisticos-regresion/index_files/figure-html/genera-escenario3-output-1.png" id="genera-escenario3" width="579" height="431" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-comprobacion-pvalor" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">stats.t.sf(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5341</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9998</span>)</span></code></pre></div>
<div id="comprobacion-pvalor" class="cell-output cell-output-display" data-execution_count="13">
<pre><code>0.29664211233560395</code></pre>
</div>
</div>
<div id="cell-prueba-variables" class="cell" data-execution_count="14">
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-08-16-estadisticos-regresion/index_files/figure-html/prueba-variables-output-1.png" id="prueba-variables" width="586" height="431" class="figure-img"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-08-16-estadisticos-regresion/</guid>
  <pubDate>Fri, 16 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Encuesta de presupuestos familiares</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-08-09-presupuestos-familiares/</link>
  <description><![CDATA[ 




<section id="datos" class="level2">
<h2 class="anchored" data-anchor-id="datos">Datos</h2>
<p>El INE tiene datos de la Encuesta de Presupuestos Familiares. He descargado un fichero con cantidades consumidas por hogar de algunos productos.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb1-5"></span>
<span id="cb1-6">ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_light</span>())</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">df_epf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv2</span>(</span>
<span id="cb2-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/25168.csv"</span>),</span>
<span id="cb2-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">locale =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">locale</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">encoding =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latin1"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grouping_mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimal_mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>),</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_col_types =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb2-5">)</span>
<span id="cb2-6"></span>
<span id="cb2-7">df_epf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>(df_epf)</span>
<span id="cb2-8"></span>
<span id="cb2-9">df_epf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_epf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>(</span>
<span id="cb2-12">      total,</span>
<span id="cb2-13">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">locale =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">locale</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grouping_mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimal_mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".."</span>)</span>
<span id="cb2-14">    ),</span>
<span id="cb2-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">periodo =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(periodo) </span>
<span id="cb2-16">  )</span></code></pre></div>
</div>
<p>Quito columnas, cambio nombres, etc.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">df_epf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_epf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>cantidades_medias_consumidas) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(</span>
<span id="cb3-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">producto =</span> codigos_de_gasto_con_cantidad_fisica</span>
<span id="cb3-5">  )</span></code></pre></div>
</div>
<p>Los nombres de productos tienen un código al principio que me va a molestar casi siempre pero pueden llegar a servirme para hacer algún filtro de categorías.</p>
<p>Así que hago algo horrible: creo una función a la que llamaré todo el rato para limpiar los nombres de productos (en lugar de hacerlo definitivo al principio).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">limpia_nombre <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data) {</span>
<span id="cb4-2">  data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb4-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">producto =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(</span>
<span id="cb4-5">        producto, </span>
<span id="cb4-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[0-9]{2}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.[0-9]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.[0-9]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.[0-9]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">sT</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">s"</span></span>
<span id="cb4-7">      )</span>
<span id="cb4-8">    )</span>
<span id="cb4-9">}</span></code></pre></div>
</div>
</section>
<section id="carnes" class="level2">
<h2 class="anchored" data-anchor-id="carnes">Carnes</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">dibuja_evolucion <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, titulo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cantidad"</span>) {</span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(data, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> periodo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> producto)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"loess"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb5-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cantidad media consumida por hogas (%s)"</span>, titulo), </span>
<span id="cb5-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .y</span>
<span id="cb5-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb5-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>, </span>
<span id="cb5-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb5-12">  )</span>
<span id="cb5-13">}</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">df_epf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">limpia_nombre</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(producto, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^Carne "</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dibuja_evolucion</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">titulo =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Carnes"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-08-09-presupuestos-familiares/index_files/figure-html/evolucion-carnes-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="bebidas" class="level2">
<h2 class="anchored" data-anchor-id="bebidas">Bebidas</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">listado_bebidas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Agua mineral"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bebidas refrescantes"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bebidas energéticas"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bebidas isotónicas"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Zumos de frutas"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vinos de uva"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cerveza"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cerveza baja en alcohol"</span>)</span>
<span id="cb7-2"></span>
<span id="cb7-3">df_epf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">limpia_nombre</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(producto, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(listado_bebidas, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dibuja_evolucion</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">titulo =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bebidas"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-08-09-presupuestos-familiares/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>exploraciones</category>
  <guid>https://lhansa.github.io/posts/2024-08-09-presupuestos-familiares/</guid>
  <pubDate>Fri, 09 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Mercamadrid</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-08-05-mercamadrid/</link>
  <description><![CDATA[ 




<section id="lectura-de-datos" class="level2">
<h2 class="anchored" data-anchor-id="lectura-de-datos">Lectura de datos</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(purrr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-6"></span>
<span id="cb1-7">ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_light</span>())</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">link_base <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://datos.madrid.es/egob/catalogo/300357-%s-mercamadrid-volumen-precio.csv"</span></span>
<span id="cb2-2">links <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(link_base, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb2-3"></span>
<span id="cb2-4">df_merca <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(links, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(link) {</span>
<span id="cb2-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (RCurl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url.exists</span>(link)) {</span>
<span id="cb2-6">    datos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv2</span>(</span>
<span id="cb2-7">      link,</span>
<span id="cb2-8">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">locale =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">locale</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">encoding =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latin1"</span>),</span>
<span id="cb2-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_col_types =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb2-10">    )</span>
<span id="cb2-11"></span>
<span id="cb2-12">    datos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>(datos)</span>
<span id="cb2-13"></span>
<span id="cb2-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.character</span>(datos<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fecha_desde)) {</span>
<span id="cb2-15">      datos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> datos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-16">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(</span>
<span id="cb2-17">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contains</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"precio"</span>),</span>
<span id="cb2-18">          \(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Precio Más Frecuente"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Precio Máximo"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Precio Mínimo"</span>))</span>
<span id="cb2-19">        ))</span>
<span id="cb2-20">    }</span>
<span id="cb2-21"></span>
<span id="cb2-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.character</span>(datos<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kilos)) {</span>
<span id="cb2-23">      datos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> datos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-24">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-25">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kilos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>(kilos, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kilos"</span>)</span>
<span id="cb2-26">        )</span>
<span id="cb2-27">    }</span>
<span id="cb2-28"></span>
<span id="cb2-29">    datos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> datos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-30">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-31">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(</span>
<span id="cb2-32">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contains</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fecha"</span>),</span>
<span id="cb2-33">          \(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y%m%d"</span>)</span>
<span id="cb2-34">        ), </span>
<span id="cb2-35">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">origen =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(origen)</span>
<span id="cb2-36">      )</span>
<span id="cb2-37"></span>
<span id="cb2-38">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(datos)</span>
<span id="cb2-39">  }</span>
<span id="cb2-40">})</span></code></pre></div>
</div>
<p>df_merca &lt;- select(df_merca, -origen)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">df_merca <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(descripcion_variedad)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 754 × 1
   descripcion_variedad 
   &lt;chr&gt;                
 1 VACUNO CANAL         
 2 VACUNO DESPIECE AÑOJO
 3 VACUNO DESPIECE VACA 
 4 VACUNO CASQUERIA     
 5 VACUNO ELABORADO     
 6 VACUNO PRECOCINADO   
 7 OVINO CANAL          
 8 OVINO DESPIECE       
 9 OVINO CASQUERIA      
10 OVINO ELABORADO      
# ℹ 744 more rows</code></pre>
</div>
</div>
</section>
<section id="vacuno" class="level2">
<h2 class="anchored" data-anchor-id="vacuno">Vacuno</h2>
<p>Hay mil cosas. Voy a ver qué puedo sacar solo del vacuno por ahora.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">df_vacuno <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_merca <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(descripcion_variedad, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^VACUNO"</span>))</span></code></pre></div>
</div>
<section id="qué-variedad-de-vacuno-se-vende-más" class="level3">
<h3 class="anchored" data-anchor-id="qué-variedad-de-vacuno-se-vende-más">Qué variedad de vacuno se vende más</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">df_vacuno <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(fecha_desde, descripcion_variedad) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kilos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(kilos, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> fecha_desde, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> kilos, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> descripcion_variedad))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-08-05-mercamadrid/index_files/figure-html/evolucion-variedad-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p><strong>¿Qué será <code>VACUNO FRESCO</code>?</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">df_vacuno_variedades <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_vacuno <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(fecha_desde, descripcion_variedad) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kilos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(kilos, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(descripcion_variedad) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kilos_mes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(kilos) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df_vacuno_variedades) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(</span>
<span id="cb7-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(descripcion_variedad, kilos_mes), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> kilos_mes),</span>
<span id="cb7-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800080"</span></span>
<span id="cb7-11">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kilos por mes"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>() </span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-08-05-mercamadrid/index_files/figure-html/distribucion-variedad-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">variedades_principales <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_vacuno_variedades <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_max</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order_by =</span> kilos_mes, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(descripcion_variedad)</span>
<span id="cb8-4"></span>
<span id="cb8-5">df_vacuno <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(descripcion_variedad <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> variedades_principales) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(fecha_desde, descripcion_variedad) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kilos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(kilos, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> fecha_desde, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> kilos, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> descripcion_variedad))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-08-05-mercamadrid/index_files/figure-html/evolucion-variedad2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="de-dónde-ha-venido-el-vacuno" class="level3">
<h3 class="anchored" data-anchor-id="de-dónde-ha-venido-el-vacuno">¿De dónde ha venido el vacuno?</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">df_variedades_origen <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_vacuno <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(descripcion_variedad <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> variedades_principales) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(descripcion_variedad, descripcion_origen) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kilos_mes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(kilos) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(descripcion_variedad) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_max</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order_by =</span> kilos_mes, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb9-8"></span>
<span id="cb9-9">df_vacuno <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">semi_join</span>(</span>
<span id="cb9-11">    df_variedades_origen,</span>
<span id="cb9-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"descripcion_variedad"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"descripcion_origen"</span>)</span>
<span id="cb9-13">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> fecha_desde, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> kilos, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> descripcion_origen)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>descripcion_variedad, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-08-05-mercamadrid/index_files/figure-html/origen-vacuno-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>exploraciones</category>
  <guid>https://lhansa.github.io/posts/2024-08-05-mercamadrid/</guid>
  <pubDate>Mon, 05 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Papel del punto en R</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-08-04-puntos-en-R/</link>
  <description><![CDATA[ 




<p>Guillermo Luijk <a href="https://www.linkedin.com/feed/update/urn:li:activity:7225379882355044352?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7225379882355044352%2C7225391436190371840%29&amp;replyUrn=urn%3Ali%3Acomment%3A%28activity%3A7225379882355044352%2C7225459855812120576%29&amp;dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287225391436190371840%2Curn%3Ali%3Aactivity%3A7225379882355044352%29&amp;dashReplyUrn=urn%3Ali%3Afsd_comment%3A%287225459855812120576%2Curn%3Ali%3Aactivity%3A7225379882355044352%29">criticaba</a> el punto en R porque se permite usar en el nombre de variables, lo que limita su uso fuera de ellas.</p>
<p>He intentado crear un operador en R con <code>.</code> que sirviera para sustituir en cierto modo al operador <code>$</code>. Imposible.</p>
<p>Pero comparto avances porque quizá, aunque sea al Leo del futuro, le puede venir bien.</p>
<section id="operadores-infix-propios-en-r" class="level2">
<h2 class="anchored" data-anchor-id="operadores-infix-propios-en-r">Operadores <em>infix</em> propios en R</h2>
<p>Todo lo que haces en R es una función. Pero no todas las funciones necesitan paréntesis. Por ejemplo, puedes sumar de dos formas:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2</code></pre>
</div>
</div>
<p>La primera opción creo que se llama <em>infix</em>. Hay operaciones que se entienden mucho mejor así escritas que escritas como la segunda opción.</p>
<p>De hecho, esa es la filosofía del <em>pipe</em>. El <em>pipe</em> está disponible desde R 4.1.0 con <code>|&gt;</code> pero antiguamente había que usar la librería <strong>magrittr</strong>.</p>
<p>Como esta librería no formaba parte de lo fundamentos del lenguaje, todos los operadores tenían que ser propios y para hacer eso hay que usar una sintaxis muy particular.</p>
<p>Los pipes de magrittr van acotados por <code>%</code>, porque esa es la sintaxis obligatoria para cualquier operador que quieras hacer y usar <em>infix</em>. Así resultó en <code>%&gt;%</code>.</p>
</section>
<section id="creación-de-un-operador-propio" class="level2">
<h2 class="anchored" data-anchor-id="creación-de-un-operador-propio">Creación de un operador propio</h2>
<p>Mi objetivo era un operador <code>.</code> con el que pudiera hacer <code>df.columna</code>, por ejemplo, que <code>mtcars.cyl</code> obtuviera resultado. Sería algo así:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">mtcars.cyl</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code> [1] 6 6 4 6 8 6 8 4 4 6 6 8 8 8 8 8 8 4 4 4 4 8 8 8 8 4 4 4 8 6 8 4</code></pre>
</div>
</div>
<p>Si intentas ejecutar eso, te dará error. Y no he dado con ninguna forma de hacerlo funcionar. Porque cualquier operador propio tiene que ir rodeado de <code>%</code>.</p>
<p>Por ello, esto es lo que he conseguido:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">%.%</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(df, columna) {</span>
<span id="cb7-2">    df[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substitute</span>(columna))]]</span>
<span id="cb7-3">}</span>
<span id="cb7-4"></span>
<span id="cb7-5">mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%.%</span>cyl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 6 6 4 6 8 6 8 4 4 6 6 8 8 8 8 8 8 4 4 4 4 8 8 8 8 4 4 4 8 6 8 4</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-08-04-puntos-en-R/</guid>
  <pubDate>Sun, 04 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Pernotaciones por Comunidades Autónomas</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-08-04-viajeros/</link>
  <description><![CDATA[ 




<p>El INE tiene unos datos de pernoctaciones a distintos niveles, mes a mes. Me interesan a nivel de Comunidad Autónoma.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-4"></span>
<span id="cb1-5">ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_light</span>())</span>
<span id="cb1-6"></span>
<span id="cb1-7">df_pernoctaciones <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv2</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2941 (1).csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">locale =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">locale</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">encoding =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latin1"</span>))</span>
<span id="cb1-8"></span>
<span id="cb1-9">df_pernoctaciones <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>(df_pernoctaciones)</span></code></pre></div>
</div>
<p>El formato de los datos nunca entenderé quién lo ha decidido. Imagino que alguien que no tenía que trabajar con ellos. Los proceso un poco.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">df_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_pernoctaciones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Quito NAs porque son el total</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(comunidades_y_ciudades_autonomas)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">periodo =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(periodo, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D01"</span>), </span>
<span id="cb2-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">periodo =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(periodo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%YM%mD%d"</span>), </span>
<span id="cb2-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>(</span>
<span id="cb2-8">      total, </span>
<span id="cb2-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">locale =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">locale</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grouping_mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>),</span>
<span id="cb2-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".."</span>)</span>
<span id="cb2-11">    )</span>
<span id="cb2-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(comunidades_y_ciudades_autonomas, periodo) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pernoctaciones =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(total, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>)</span></code></pre></div>
</div>
<p>Y aquí, la evolución de pernoctaciones mes a mes de cada Comunidad Autónoma:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">formato <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">big.mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">suffix =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"k"</span>)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df_series, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> periodo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pernoctaciones)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800080"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"loess"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> formato) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(</span>
<span id="cb3-7">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>comunidades_y_ciudades_autonomas, </span>
<span id="cb3-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>, </span>
<span id="cb3-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb3-10">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb3-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pernoctaciones mensuales por CCAA"</span>, </span>
<span id="cb3-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fuente: INE"</span>, </span>
<span id="cb3-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pernoctaciones (miles)"</span>, </span>
<span id="cb3-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb3-16">  )</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-08-04-viajeros/index_files/figure-html/evolucion-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>



 ]]></description>
  <category>exploraciones</category>
  <guid>https://lhansa.github.io/posts/2024-08-04-viajeros/</guid>
  <pubDate>Sun, 04 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Concatenación de strings con R, con benchmark</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-07-30-concatena-strings/</link>
  <description><![CDATA[ 




<p>Tienes una variable con un texto que tienes que introducirlo dentro de otro texto. Este ocurre habitualmente cuando un usuario pone algún parámetro de tipo texto y tienes que incluir en un párrafo preconstruido, o interactuar de alguna forma con ese nombre, por ejemmplo, un chatbot clásico que recibía como entrada el nombre del usuario y luego le preguntaba “¿Qué tal estás, <nombre de="" usuario="">?” (no sé si eso es tan clásico o sigue siendo orden del día).</nombre></p>
<p>En este post comparo tiempos de ejecución de varias opciones que tienes en R.</p>
<p>La idea general te la da este código:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">nombre_entrada <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pepito"</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hola,"</span>, nombre_entrada)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Hola, Pepito"</code></pre>
</div>
</div>
<p>Voy a crear varias funciones con distintas formas de hacer esto y luego cuento tiempos de cómputo.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">con_paste <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(nombre_entrada) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hola,"</span>, nombre_entrada)</span>
<span id="cb3-2">con_sprintf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(nombre_entrada) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hola, %s"</span>, nombre_entrada)</span>
<span id="cb3-3">con_glue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(nombre_entrada) glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hola, {nombre_entrada}"</span>)</span>
<span id="cb3-4">con_gsub <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(nombre_entrada) {</span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nombre_entrada"</span>, nombre_entrada, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hola, nombre_entrada"</span>) </span>
<span id="cb3-6">}</span></code></pre></div>
</div>
<p>Y aquí los tiempos.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">microbenchmark<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">microbenchmark</span>(</span>
<span id="cb4-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con_paste =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con_paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pepito"</span>),</span>
<span id="cb4-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con_sprintf =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con_sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pepito"</span>),</span>
<span id="cb4-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con_glue =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con_glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pepito"</span>),</span>
<span id="cb4-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con_gsub =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con_gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pepito"</span>)</span>
<span id="cb4-6">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Unit: nanoseconds
        expr    min       lq      mean   median       uq      max neval
   con_paste   2202   2650.5  12954.99   3401.0   4201.0   850801   100
 con_sprintf    901   1250.5  11382.94   2101.0   3151.0   790101   100
    con_glue 135902 143701.0 591651.04 154401.0 180501.5 41454102   100
    con_gsub  10301  12150.0  30976.88  14801.5  18202.0  1449701   100</code></pre>
</div>
</div>
<p>En casos más complicados, <code>glue::glue()</code> puede parecer más intuitivo. ¿Es ese el único motivo para usarlo?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">con_paste <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(nombre_entrada) {</span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hola, "</span>, nombre_entrada, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">". ¿Cómo estás, "</span>, nombre_entrada, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"?"</span>)</span>
<span id="cb6-3">} </span>
<span id="cb6-4">con_sprintf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(nombre_entrada) {</span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hola, %s. ¿Cómo estás, %s?"</span>, nombre_entrada, nombre_entrada)</span>
<span id="cb6-6">  </span>
<span id="cb6-7">} </span>
<span id="cb6-8">con_glue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(nombre_entrada) {</span>
<span id="cb6-9">  glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hola, {nombre_entrada}. ¿Cómo estás, {nombre_entrada}?"</span>)</span>
<span id="cb6-10">  </span>
<span id="cb6-11">}</span>
<span id="cb6-12">con_gsub <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(nombre_entrada) {</span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nombre_entrada"</span>, nombre_entrada, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hola, nombre_entrada. ¿Cómo estás, nombre_entrada?"</span>) </span>
<span id="cb6-14">}</span>
<span id="cb6-15"></span>
<span id="cb6-16">microbenchmark<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">microbenchmark</span>(</span>
<span id="cb6-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con_paste =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con_paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pepito"</span>),</span>
<span id="cb6-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con_sprintf =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con_sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pepito"</span>),</span>
<span id="cb6-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con_glue =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con_glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pepito"</span>),</span>
<span id="cb6-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con_gsub =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con_gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pepito"</span>)</span>
<span id="cb6-21">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Unit: microseconds
        expr     min       lq      mean   median       uq      max neval
   con_paste   2.701   3.2010  14.34601   4.0010   4.4005 1040.201   100
 con_sprintf   1.200   1.7015  15.13189   2.6515   3.2010 1225.901   100
    con_glue 149.201 157.8510 182.23310 162.9015 168.9510 1041.801   100
    con_gsub  13.601  15.5005  33.93807  18.0510  19.5515 1564.500   100</code></pre>
</div>
</div>



 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-07-30-concatena-strings/</guid>
  <pubDate>Tue, 30 Jul 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Evolución de compraventa mensual en España</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-05-25-viviendas/</link>
  <description><![CDATA[ 




<p>El INE tiene datos mensuales sobre compraventa de viviendas por Comunidades Autónomas (lo tiene por provincias pero he pasado de ese nivel):</p>
<div id="cell-lectura" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"></span>
<span id="cb1-3">df_viviendas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(</span>
<span id="cb1-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ine-compraventa.csv'</span>, </span>
<span id="cb1-5">  sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">';'</span>, </span>
<span id="cb1-6">  thousands<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>,</span>
<span id="cb1-7">  encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'iso-8859-1'</span></span>
<span id="cb1-8">)</span>
<span id="cb1-9"></span>
<span id="cb1-10">df_viviendas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb1-11">  df_viviendas</span>
<span id="cb1-12">  .drop([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Régimen y estado'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Total Nacional'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Provincias'</span>], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-13">  .rename(</span>
<span id="cb1-14">    columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: x.lower().replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>).encode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ascii'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ignore'</span>).decode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>))</span>
<span id="cb1-15">)</span>
<span id="cb1-16"></span>
<span id="cb1-17">df_viviendas.head()</span></code></pre></div>
<div id="lectura" class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">comunidades_y_ciudades_autnomas</th>
<th data-quarto-table-cell-role="th">periodo</th>
<th data-quarto-table-cell-role="th">total</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>01 Andalucía</td>
<td>2024M03</td>
<td>8805</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>01 Andalucía</td>
<td>2024M02</td>
<td>9606</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>01 Andalucía</td>
<td>2024M01</td>
<td>10290</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>01 Andalucía</td>
<td>2023M12</td>
<td>7519</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>01 Andalucía</td>
<td>2023M11</td>
<td>9857</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Vamos a tratarlo un poco (tampoco mucho, que es sábado):</p>
<div id="cell-algo-tratamiento" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">df_viviendas[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'periodo'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.to_datetime(df_viviendas[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'periodo'</span>], <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%YM%m'</span>)</span>
<span id="cb2-2"></span>
<span id="cb2-3">df_viviendas[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'comunidades_y_ciudades_autnomas'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_viviendas[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'comunidades_y_ciudades_autnomas'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'\d</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{2}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> '</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>, regex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5"></span>
<span id="cb2-6">df_viviendas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb2-7">  df_viviendas</span>
<span id="cb2-8">  .rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'comunidades_y_ciudades_autnomas'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ccaa'</span>})</span>
<span id="cb2-9">)</span>
<span id="cb2-10"></span>
<span id="cb2-11">df_viviendas.head()</span></code></pre></div>
<div id="algo-tratamiento" class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">ccaa</th>
<th data-quarto-table-cell-role="th">periodo</th>
<th data-quarto-table-cell-role="th">total</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Andalucía</td>
<td>2024-03-01</td>
<td>8805</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Andalucía</td>
<td>2024-02-01</td>
<td>9606</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Andalucía</td>
<td>2024-01-01</td>
<td>10290</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Andalucía</td>
<td>2023-12-01</td>
<td>7519</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Andalucía</td>
<td>2023-11-01</td>
<td>9857</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Mucho mejor. Ahora toca visualizar esto.</p>
<p>El siguiente código es de ChatGPT… y sinceramente, creo que está mal, que pinta lo que le da la gana y no lo que yo quiero (concretamente, se inventa el orden del eje x).</p>
<p>Pero llevo horas con problemas de VSCode, versiones de Python, entornos virtuales y paso de dedicarle más tiempo a esto hoy (cosa que en R habrían sido 5 minutos).</p>
<p>Otro día.</p>
<div id="cell-evolucion" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.dates <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mdates</span>
<span id="cb3-4"></span>
<span id="cb3-5">g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.FacetGrid(</span>
<span id="cb3-6">  df_viviendas, </span>
<span id="cb3-7">  col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ccaa'</span>, </span>
<span id="cb3-8">  col_wrap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, </span>
<span id="cb3-9">  hue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ccaa'</span>, </span>
<span id="cb3-10">  sharey<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb3-11">)  </span>
<span id="cb3-12"></span>
<span id="cb3-13">g.map_dataframe(sns.lineplot, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'periodo'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'total'</span>)</span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ajustar las etiquetas y el layout</span></span>
<span id="cb3-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ax <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> g.axes.flatten():</span>
<span id="cb3-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ajustar los locators para que solo se muestren unos pocos ticks</span></span>
<span id="cb3-18">    ax.xaxis.set_major_locator(mdates.MonthLocator(interval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ajusta el intervalo según sea necesario</span></span>
<span id="cb3-19">    ax.xaxis.set_major_formatter(mdates.DateFormatter(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m'</span>))</span>
<span id="cb3-20">    ax.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>, rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>)</span>
<span id="cb3-21"></span>
<span id="cb3-22">g.set_axis_labels(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Fecha'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Total'</span>)</span>
<span id="cb3-23"></span>
<span id="cb3-24">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-05-25-viviendas/index_files/figure-html/evolucion-output-1.png" id="evolucion" width="1441" height="1179" class="figure-img"></p>
</figure>
</div>
</div>
</div>



 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-05-25-viviendas/</guid>
  <pubDate>Sat, 25 May 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Un problema habitual en ficheros CSV</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-05-09-csv/</link>
  <description><![CDATA[ 




<p>Tienes el conjunto de datos <em>iris</em> en un fichero de texto plano con esta pinta:</p>
<pre><code>sepal length (cm);sepal width (cm);petal length (cm);petal width (cm);species
5.1;3.5;1.4;0.2;0;1,000.23
4.9;3.0;1.4;0.2;0;1,000.23
4.7;3.2;1.3;0.2;0;1,000.23
4.6;3.1;1.5;0.2;0;1,000.23
5.0;3.6;1.4;0.2;0;1,000.23
5.4;3.9;1.7;0.4;0;1,000.23</code></pre>
<p>Como verás, lo he tuneado un poco: le he añadido una columna con valor constante 1000.23, escrito con el formato anglosajón de separador de miles usando comas.</p>
<p>Maravilloso. A ver cómo lo leemos.</p>
<section id="r" class="level2">
<h2 class="anchored" data-anchor-id="r">R</h2>
<p>En R, puedes tener la tentación de leerlo así:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readr)</span>
<span id="cb2-2">df_iris <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iris.txt"</span>)</span>
<span id="cb2-3">df_iris</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 150 × 1
   sepal length (cm);sepal width (cm);petal length (cm);petal width (cm);speci…¹
   &lt;chr&gt;                                                                        
 1 5.1;3.5;1.4;0.2;0;1,000.23                                                   
 2 4.9;3.0;1.4;0.2;0;1,000.23                                                   
 3 4.7;3.2;1.3;0.2;0;1,000.23                                                   
 4 4.6;3.1;1.5;0.2;0;1,000.23                                                   
 5 5.0;3.6;1.4;0.2;0;1,000.23                                                   
 6 5.4;3.9;1.7;0.4;0;1,000.23                                                   
 7 4.6;3.4;1.4;0.3;0;1,000.23                                                   
 8 5.0;3.4;1.5;0.2;0;1,000.23                                                   
 9 4.4;2.9;1.4;0.2;0;1,000.23                                                   
10 4.9;3.1;1.5;0.1;0;1,000.23                                                   
# ℹ 140 more rows
# ℹ abbreviated name:
#   ¹​`sepal length (cm);sepal width (cm);petal length (cm);petal width (cm);species;extra`</code></pre>
</div>
</div>
<p>Todo horrible porque está todo dentro de una columna. La función no ha sabido separar en columnas porque esperaba la coma como delimitador. La coma está en los valores de la columna <code>extra</code> pero no en la primera fila, con los nombres de columnas. Así que <code>read_csv</code> entiende que solo hay una columna.</p>
<p><code>read.csv()</code> se hace bastante lío y daría error con algo así.</p>
<p>Un clásico cuando no te funciona <code>read_csv()</code> es probar <code>read_csv2()</code>, que asume que la separación es <code>";"</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">df_iris <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv2</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iris.txt"</span>)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df_iris)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 6
  `sepal length (cm)` `sepal width (cm)` `petal length (cm)` `petal width (cm)`
                &lt;dbl&gt;              &lt;dbl&gt;               &lt;dbl&gt; &lt;chr&gt;             
1                  51                 35                  14 0.2               
2                  49                 30                  14 0.2               
3                  47                 32                  13 0.2               
4                  46                 31                  15 0.2               
5                  50                 36                  14 0.2               
6                  54                 39                  17 0.4               
# ℹ 2 more variables: species &lt;dbl&gt;, extra &lt;dbl&gt;</code></pre>
</div>
</div>
<p>Tampoco funciona.</p>
<p>Las columnas sí están separadas, pero los valores no tienens sentido. <code>read_csv2()</code> ha usado la coma como separador decimal. Y los puntos que había en los números, se los ha pasado por ahí. Y la columna <code>extra</code> la ha puesto como si la coma fuera el separador decimal, cuando realmente es el separador de miles.</p>
<p>Así que mal.</p>
<p>Si usaras R base con <code>read.csv2()</code> tendrías también un poco de lío, con columnas identificadas como texto en lugar de número.</p>
<p>En estos casos, yo tiro de <code>readr::read_delim()</code> especificando cuál es el separador de miles y cuál el decimal (algo equivalente puedes hacer en R base con <code>read.table()</code>).</p>
<p>Con la función <code>readr::locale()</code> especifico estos separadores.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">df_iris <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_delim</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iris.txt"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">delim =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">";"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">locale =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">locale</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimal_mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grouping_mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>))</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df_iris)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 6
  `sepal length (cm)` `sepal width (cm)` `petal length (cm)` `petal width (cm)`
                &lt;dbl&gt;              &lt;dbl&gt;               &lt;dbl&gt;              &lt;dbl&gt;
1                 5.1                3.5                 1.4                0.2
2                 4.9                3                   1.4                0.2
3                 4.7                3.2                 1.3                0.2
4                 4.6                3.1                 1.5                0.2
5                 5                  3.6                 1.4                0.2
6                 5.4                3.9                 1.7                0.4
# ℹ 2 more variables: species &lt;dbl&gt;, extra &lt;dbl&gt;</code></pre>
</div>
</div>
<p>Es un esperpento anti-estandarizaciones, pero ocurre. Debe de haber algunas herramientas de estas que descargan informes en texto plano que tienen esta configuración horrorosa, porque me llegan ficheros así cada dos por tres.</p>
<p>Y como no son estándar, las funciones habituales de lectura de CSVs se hacen bastante lío.</p>
<p>Para casos así, intento <strong>ser muy explícito con el código</strong> y <code>read_delim()</code> me obliga a ello por sistema.</p>
</section>
<section id="con-python" class="level2">
<h2 class="anchored" data-anchor-id="con-python">Con Python</h2>
<p>En Python usaría directamente la función de pandas <code>pd.read_csv()</code> especificando todo.</p>
<p>Por defecto no funciona:</p>
<div class="cell" data-python.reticulate="false">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb8-2">df_iris <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'iris.txt'</span>)</span>
<span id="cb8-3">df_iris.head()</span></code></pre></div>
</div>
<p>Pero cada cosa tiene su argumento:</p>
<div class="cell" data-python.reticulate="false">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb9-2">df_iris <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(</span>
<span id="cb9-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'iris.txt'</span>, </span>
<span id="cb9-4">  sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">';'</span>, </span>
<span id="cb9-5">  decimal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#no necesario en este caso</span></span>
<span id="cb9-6">  thousands<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">','</span></span>
<span id="cb9-7">  </span>
<span id="cb9-8">  )</span>
<span id="cb9-9">df_iris.head()</span></code></pre></div>
</div>
<p>La función <code>pd.read_csv()</code> ya asume que el separador decimal es el punto, así que no hace falta especificar nada de eso esta vez…</p>


</section>

 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-05-09-csv/</guid>
  <pubDate>Thu, 09 May 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Por qué puedes necesitar non standard evaluation en dplyr</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-04-24-por-que-nse/</link>
  <description><![CDATA[ 




<p>Tienes los datos de <code>penguins</code> y quieres hacer una función con el código de una exploración sobre este conjunto de datos.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">df_penguins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins</span>
<span id="cb1-2">df_penguins</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 344 × 8
   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g
   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;
 1 Adelie  Torgersen           39.1          18.7               181        3750
 2 Adelie  Torgersen           39.5          17.4               186        3800
 3 Adelie  Torgersen           40.3          18                 195        3250
 4 Adelie  Torgersen           NA            NA                  NA          NA
 5 Adelie  Torgersen           36.7          19.3               193        3450
 6 Adelie  Torgersen           39.3          20.6               190        3650
 7 Adelie  Torgersen           38.9          17.8               181        3625
 8 Adelie  Torgersen           39.2          19.6               195        4675
 9 Adelie  Torgersen           34.1          18.1               193        3475
10 Adelie  Torgersen           42            20.2               190        4250
# ℹ 334 more rows
# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;</code></pre>
</div>
</div>
<p>La situación que te planteo es que tienes que crear una función cuyo argumento sea el nombre de una de las columnas, y calcule la media de la longitud del pico (<code>bill_length_mm</code>) en función de esa columna. Con dplyr.</p>
<section id="planteamiento-tidyselect" class="level2">
<h2 class="anchored" data-anchor-id="planteamiento-tidyselect">Planteamiento <code>tidyselect</code></h2>
<p>Una forma de hacerlo, aceptando que el nombre de la columna venga como <code>character</code>, es esta:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb3-2"></span>
<span id="cb3-3">calcula_mediana_pico <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, columna_grupos) {</span>
<span id="cb3-4">  data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pick</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_of</span>(columna_grupos))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mediana_long_pico =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb3-7">}</span>
<span id="cb3-8"></span>
<span id="cb3-9">df_penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_mediana_pico</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"island"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 2
  island    mediana_long_pico
  &lt;fct&gt;                 &lt;dbl&gt;
1 Biscoe                 45.8
2 Dream                  44.7
3 Torgersen              38.9</code></pre>
</div>
</div>
<p>Le pongo una pega. Puede haber más pero yo le pongo solo una: que tengo que entrecomillar la columna con la que agrupo. O sea, no puedo hacer esto:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">df_penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_mediana_pico</span>(island)</span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Error: object 'island' not found</span></span></code></pre></div>
</div>
</section>
<section id="planteamiento-rlang" class="level2">
<h2 class="anchored" data-anchor-id="planteamiento-rlang">Planteamiento rlang</h2>
<p>Me gustaría que ese código funcionara, porque con dplyr es normal escribir los nombres de columnas sin comillas:</p>
<ul>
<li>Puedes usar el autocompletado (con comillas no)</li>
<li>Va a ser consistente con otras funciones de dplyr</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">df_penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(island, bill_length_mm, year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2007</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_mediana_pico</span>(island)</span></code></pre></div>
</div>
<p>En un código como ese, no quiero tener que entrecomillar <code>island</code> porque no viene a cuento.</p>
<p>Eso lo puedo solucionar con rlang. La función quedará algo así:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rlang)</span>
<span id="cb7-2"></span>
<span id="cb7-3">calcula_mediana_pico <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, columna_grupos) {</span>
<span id="cb7-4">  data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(columna_grupos)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mediana_long_pico =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb7-7">}</span></code></pre></div>
</div>
<p>Te destripo ese ingrediente que acabo de poner.</p>
<section id="enquo" class="level3">
<h3 class="anchored" data-anchor-id="enquo"><code>enquo</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">f <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(argumento) {</span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(argumento)</span>
<span id="cb8-3">}</span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f</span>(island)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;quosure&gt;
expr: ^island
env:  global</code></pre>
</div>
</div>
<p><code>enquo()</code> me devuelve lo que se llama una <em>quosure</em> (ni idea de su traducción): lo puedes ver como una expresión con información sobre el entorno.</p>
<p>Al evaluar <code>enquo()</code> dentro de una función con un argumento, obtenemos el valor que se le ha dado al argumento sin llegar a evaluarlo:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;quosure&gt;
expr: ^1 + 1
env:  global</code></pre>
</div>
</div>
<p>Para evaluarlo tenemos que:</p>
<ul>
<li>Añadir el operador <code>!!</code> (<em>bang bang</em>).</li>
<li>Operar dentro de unas funciones determinadas, como muchas de dplyr.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">selecciona <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(columna) {</span>
<span id="cb12-2">  df_penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(columna))</span>
<span id="cb12-4">}</span>
<span id="cb12-5"></span>
<span id="cb12-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selecciona</span>(island) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 1
  island   
  &lt;fct&gt;    
1 Torgersen
2 Torgersen
3 Torgersen
4 Torgersen
5 Torgersen
6 Torgersen</code></pre>
</div>
</div>
<p>Que es justo lo que hacía en la función que te planteé más arriba:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">calcula_mediana_pico <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, columna_grupos) {</span>
<span id="cb14-2">  data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb14-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(columna_grupos)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb14-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mediana_long_pico =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb14-5">}</span>
<span id="cb14-6"></span>
<span id="cb14-7">df_penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb14-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_mediana_pico</span>(species)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 2
  species   mediana_long_pico
  &lt;fct&gt;                 &lt;dbl&gt;
1 Adelie                 38.8
2 Chinstrap              49.6
3 Gentoo                 47.3</code></pre>
</div>
</div>
<p>Ni que decir tiene que es compatible con otras operaciones de dplyr:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">df_penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(species, bill_length_mm, year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2007</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_mediana_pico</span>(species) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(mediana_long_pico))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 2
  species   mediana_long_pico
  &lt;fct&gt;                 &lt;dbl&gt;
1 Chinstrap              49.7
2 Gentoo                 47.5
3 Adelie                 38.7</code></pre>
</div>
</div>
<blockquote class="blockquote">
<p><code>!!enquo()</code> puede reemplazarse por el operador <code>{{}}</code> (<em>curly curly</em>), con el que tus códigos quedarán más limpios, aunque a mí no termina de gustarme porque creo que se enienden peor los elemenos de la librería rlang.</p>
</blockquote>
</section>
<section id="más-columnas" class="level3">
<h3 class="anchored" data-anchor-id="más-columnas">Más columnas</h3>
<p>Vale, ahora no solo quieres dar al usuario la posibilidad de que dé la columna de agrupación, sino también la métrica que agregamos.</p>
<p>Si solo quieres eso, no necesitas más ingredientes, pero ya verás cómo sí quieres tener otra cosa:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">calcula_mediana <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, columna_grupos, metrica) {</span>
<span id="cb18-2">  data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(columna_grupos)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cambio nombre de la mediana</span></span>
<span id="cb18-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mediana =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(metrica), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb18-6">}</span>
<span id="cb18-7"></span>
<span id="cb18-8">df_penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_mediana</span>(species, bill_depth_mm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 2
  species   mediana
  &lt;fct&gt;       &lt;dbl&gt;
1 Adelie       18.4
2 Chinstrap    18.4
3 Gentoo       15  </code></pre>
</div>
</div>
<p>Guay, ha funcionado. Puedo usar cualquier métrica y columna:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">df_penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_mediana</span>(year, flipper_length_mm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 2
   year mediana
  &lt;int&gt;   &lt;dbl&gt;
1  2007     195
2  2008     200
3  2009     199</code></pre>
</div>
</div>
<p>Lo que me falta ahora es poder cambiar el nombre también de la columna mediana en función de la métrica elegida.</p>
</section>
<section id="y-as_name" class="level3">
<h3 class="anchored" data-anchor-id="y-as_name"><code>:=</code> y <code>as_name</code></h3>
<p>La intuición podría decirte que hicieras algo parecido a la izquierda del igual, con <code>!!enquo()</code>. No te va a funcionar, salvo que añadas el operador. <code>:=</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">calcula_mediana <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, columna_grupos, metrica) {</span>
<span id="cb22-2">  data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(columna_grupos)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cambio nombre de la mediana</span></span>
<span id="cb22-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(metrica) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(metrica), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb22-6">}</span>
<span id="cb22-7"></span>
<span id="cb22-8">df_penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_mediana</span>(island, bill_depth_mm)</span></code></pre></div>
</div>
<p>Un pequeño cambio y lo solucionas todo.</p>
<p>Pero vamos incluso un paso más allá. Quieres que la métrica nueva no se llame igual que la columna que agregas sino <code>"mediana_"</code> pegado al nombre de la columna. Para eso necesitas la combinación de <code>as_name()</code>, que te va a permitir tratar como <code>character</code> el argumento que pasa el usuario:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_name</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quote</span>(bill_length_mm))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "bill_length_mm"</code></pre>
</div>
</div>
<p>Vamos a aplicar esto:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">calcula_mediana <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, columna_grupos, metrica) {</span>
<span id="cb25-2">  nuevo_nombre <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(</span>
<span id="cb25-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mediana_"</span>, </span>
<span id="cb25-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_name</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(metrica))</span>
<span id="cb25-5">  )</span>
<span id="cb25-6">  data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb25-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(columna_grupos)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb25-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nuevo_nombre :=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(metrica), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb25-9">}</span>
<span id="cb25-10"></span>
<span id="cb25-11">df_penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb25-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_mediana</span>(island, bill_depth_mm)</span></code></pre></div>
</div>
<p>O:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">df_penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb26-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcula_mediana</span>(year, body_mass_g)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 2
   year mediana
  &lt;int&gt;   &lt;dbl&gt;
1  2007    3900
2  2008    4200
3  2009    4000</code></pre>
</div>
</div>
<hr>
<p>Como decía más arriba, <code>!!enquo()</code> se puede reemplazar por <code>{{}}</code>, pero creo que dificulta ver el papel de <code>enquo()</code> en todo esto.</p>
<hr>
<p>Atención:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">nuevo_entorno <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new.env</span>()</span>
<span id="cb28-2">nuevo_entorno<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span></span>
<span id="cb28-3"></span>
<span id="cb28-4">suma_expr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb28-5">suma_expr</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1 + 1</code></pre>
</div>
</div>
<p>Y resulta que:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_tidy</span>(suma_expr, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">env =</span> nuevo_entorno)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0</code></pre>
</div>
</div>
<p>¿O no?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_tidy</span>(suma_expr)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-04-24-por-que-nse/</guid>
  <pubDate>Wed, 24 Apr 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Cómo aplicar non standard evaluation con dplyr y rlang</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-04-22-empleo/</link>
  <description><![CDATA[ 




<p>Tengo datos de empleos en el sector público y privado del INE. Y los quiero explorar con dplyr y ggplot2.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_light</span>())</span></code></pre></div>
</div>
<p>Leer los ficheros del INE siempre es aventura con sus formatos, pero aquí tienes el código.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">df_empleo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> readr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv2</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../data/4262.csv"</span>, </span>
<span id="cb2-2">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_col_types =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb2-3">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">locale =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">locale</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">encoding =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latin1"</span>))</span>
<span id="cb2-4"></span>
<span id="cb2-5">df_empleo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>(df_empleo) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ccaa =</span> comunidades_y_ciudades_autonomas)</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df_empleo)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 5
  ccaa         sexo    tipo_de_sector periodo total
  &lt;chr&gt;        &lt;chr&gt;   &lt;chr&gt;          &lt;chr&gt;   &lt;dbl&gt;
1 01 Andalucía Hombres Empleo público 2023T4   286.
2 01 Andalucía Hombres Empleo público 2023T3   298.
3 01 Andalucía Hombres Empleo público 2023T2   289 
4 01 Andalucía Hombres Empleo público 2023T1   294.
5 01 Andalucía Hombres Empleo público 2022T4   297 
6 01 Andalucía Hombres Empleo público 2022T3   299 </code></pre>
</div>
</div>
<section id="una-exploración-rápida" class="level2">
<h2 class="anchored" data-anchor-id="una-exploración-rápida">Una exploración rápida</h2>
<p>Esto es lo que te planteo explorar: una agregación trimestral por tipo de sector.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">df_agg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_empleo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(periodo, tipo_de_sector) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(total), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">convierte_periodo</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># función propia para convertir a fecha</span></span>
<span id="cb4-5"></span>
<span id="cb4-6">df_agg</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 24 × 3
   periodo    tipo_de_sector  total
   &lt;date&gt;     &lt;chr&gt;           &lt;dbl&gt;
 1 2021-01-01 Empleo privado 15809.
 2 2021-01-01 Empleo público  3397.
 3 2021-04-01 Empleo privado 16232.
 4 2021-04-01 Empleo público  3440.
 5 2021-07-01 Empleo privado 16547.
 6 2021-07-01 Empleo público  3484.
 7 2021-10-01 Empleo privado 16709.
 8 2021-10-01 Empleo público  3476.
 9 2022-01-01 Empleo privado 16617.
10 2022-01-01 Empleo público  3468.
# ℹ 14 more rows</code></pre>
</div>
</div>
<p>Que devuelve un gráfico así.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df_agg) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> periodo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> tipo_de_sector)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_discrete</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tipo de empleo"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb6-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Trimestre"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Empleados"</span>, </span>
<span id="cb6-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Evolución trimestral de empleados privados y públicos"</span>, </span>
<span id="cb6-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fuente: INE"</span></span>
<span id="cb6-8">  )</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-04-22-empleo/index_files/figure-html/grafico-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="más-libertad" class="level2">
<h2 class="anchored" data-anchor-id="más-libertad">Más libertad</h2>
<p>Ahora voy a preparar una función para que un usuario pueda elegir una columna más con la que agregar.</p>
<p>Lo que quiero es una función con la que funcione un código así:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">agrega_empleo</span>(sexo)</span></code></pre></div>
</div>
<p>Si intentas plantear eso solo con dplyr te dará un error diciendo que cierto objeto no es nada. En el código siguiente, <code>grouping_var</code> no sería nada sino fuera por esa combinación de <code>enquo()</code> con otros elementos.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rlang)</span>
<span id="cb8-2"></span>
<span id="cb8-3">agrega_empleo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(grouping_var) {</span>
<span id="cb8-4">  nombre_metrica <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_name</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(grouping_var))</span>
<span id="cb8-5">  nombre_metrica <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"total_por_"</span>, nombre_metrica)</span>
<span id="cb8-6">  df_empleo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(periodo, tipo_de_sector, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquo</span>(grouping_var)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nombre_metrica :=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(total), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">convierte_periodo</span>() </span>
<span id="cb8-10">}</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">agrega_empleo</span>(ccaa)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 456 × 4
   periodo    tipo_de_sector ccaa                       total_por_ccaa
   &lt;date&gt;     &lt;chr&gt;          &lt;chr&gt;                               &lt;dbl&gt;
 1 2021-01-01 Empleo privado 01 Andalucía                        2469.
 2 2021-01-01 Empleo privado 02 Aragón                            451.
 3 2021-01-01 Empleo privado 03 Asturias, Principado de           294 
 4 2021-01-01 Empleo privado 04 Balears, Illes                    416 
 5 2021-01-01 Empleo privado 05 Canarias                          626 
 6 2021-01-01 Empleo privado 06 Cantabria                         190.
 7 2021-01-01 Empleo privado 07 Castilla y León                   752 
 8 2021-01-01 Empleo privado 08 Castilla - La Mancha              658.
 9 2021-01-01 Empleo privado 09 Cataluña                         2913.
10 2021-01-01 Empleo privado 10 Comunitat Valenciana             1671.
# ℹ 446 more rows</code></pre>
</div>
</div>
<p>En lo anterior, <code>!!enquo()</code> se encarga de evaluar la expresión dentro de grouping_var (<code>ccaa</code> en este caso) en el entorno adecuado.</p>
<p>Si tienes muchas variables, necesitarás algo como lo siguiente (aunque aún no sé cómo afecta eso entonces a los nombres de nuevas columnas).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">agrega_empleo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(...) {</span>
<span id="cb11-2">  df_empleo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(periodo, tipo_de_sector, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enquos</span>(...)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb11-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(total), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb11-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">convierte_periodo</span>() </span>
<span id="cb11-6">}</span>
<span id="cb11-7"></span>
<span id="cb11-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">agrega_empleo</span>(ccaa, sexo)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 912 × 5
   periodo    tipo_de_sector ccaa                       sexo    total
   &lt;date&gt;     &lt;chr&gt;          &lt;chr&gt;                      &lt;chr&gt;   &lt;dbl&gt;
 1 2021-01-01 Empleo privado 01 Andalucía               Hombres 1474 
 2 2021-01-01 Empleo privado 01 Andalucía               Mujeres  995.
 3 2021-01-01 Empleo privado 02 Aragón                  Hombres  268 
 4 2021-01-01 Empleo privado 02 Aragón                  Mujeres  183.
 5 2021-01-01 Empleo privado 03 Asturias, Principado de Hombres  164.
 6 2021-01-01 Empleo privado 03 Asturias, Principado de Mujeres  130.
 7 2021-01-01 Empleo privado 04 Balears, Illes          Hombres  233.
 8 2021-01-01 Empleo privado 04 Balears, Illes          Mujeres  183.
 9 2021-01-01 Empleo privado 05 Canarias                Hombres  335.
10 2021-01-01 Empleo privado 05 Canarias                Mujeres  291.
# ℹ 902 more rows</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-04-22-empleo/</guid>
  <pubDate>Mon, 22 Apr 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Cómo procesas datos que no te caben en RAM</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-04-21-dataframes-inmemory/</link>
  <description><![CDATA[ 




<p>Tengo unos 16GB de datos en ficheros parquet en una carpeta.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page</span></span>
<span id="cb1-2">path_to_folder <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../data/taxiny/"</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://stackoverflow.com/a/68145683/7569570</span></span>
<span id="cb1-5">dir_size <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">recursive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) {</span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stopifnot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.character</span>(path))</span>
<span id="cb1-7">  files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full.names =</span> T, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">recursive =</span> recursive)</span>
<span id="cb1-8">  vect_size <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(files, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.size</span>(x))</span>
<span id="cb1-9">  size_files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(vect_size)</span>
<span id="cb1-10">  size_files</span>
<span id="cb1-11">}</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir_size</span>(path_to_folder)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GB"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>16.74646 GB</code></pre>
</div>
</div>
<p>Cada fichero tiene datos de trayectos de taxi en la ciudad de Nueva York.</p>
<p>Quiero calcular cuántos trayectos con tarifa de aeropuerto ha habido en cada día, desde enero de 2021 hasta febrero de 2024. Es una operación con una estructura sencilla: si te cupiera en un Excel lo podrías plantear en una tabla dinámica sin muchas especificaciones.</p>
<p>O con SQL como lingua franca, si tuviera todos los datos en una tabla, sería algo así:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">SELECT</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">day</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>)</span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> Viajes</span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">WHERE</span> airport_fee <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">GROUP</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">BY</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">day</span></span></code></pre></div>
</div>
<p>Pero no los tengo todos en una tabla, sino en 38 ficheros. En cualquier programa orientado a dato es fácil juntar varias en tablas en una, con algún <em>concat</em> o variantes. <strong>Pero tengo 16GB de datos para un portátil de 8GB de RAM:</strong> no voy a poder.</p>
<p>Así que necesito calcular eso sin cargar todo en memoria. ¿Cómo procedo?</p>
<section id="versión-directa" class="level2">
<h2 class="anchored" data-anchor-id="versión-directa">Versión directa</h2>
<p>Si lo que conoces es R (aplica también a pandas y Python), podrías plantear un bucle que itere sobre cada fichero.</p>
<p>Los ficheros están en parquet, así que usaré la librería <strong>arrow</strong> para cargar sus datos en un data frame.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(arrow)</span></code></pre></div>
</div>
<p>La operación con un solo fichero sería algo así:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_parquet</span>(</span>
<span id="cb5-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../data/taxiny/fhvhv_tripdata_2023-01.parquet"</span>, </span>
<span id="cb5-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_select =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pickup_datetime"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"airport_fee"</span>),</span>
<span id="cb5-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">as_data_frame =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb5-5">)</span>
<span id="cb5-6"></span>
<span id="cb5-7">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(airport_fee <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(pickup_datetime)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> day) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10 × 2
   day        count
   &lt;date&gt;     &lt;int&gt;
 1 2023-01-01 41384
 2 2023-01-02 50682
 3 2023-01-03 50072
 4 2023-01-04 43015
 5 2023-01-05 42661
 6 2023-01-06 41856
 7 2023-01-07 36971
 8 2023-01-08 50466
 9 2023-01-09 46022
10 2023-01-10 39091</code></pre>
</div>
</div>
<p>Luego vemos lo de <code>as_data_frame = TRUE</code>. Por ahora metemos eso en un bucle.</p>
</section>
<section id="método-1.-bucle" class="level2">
<h2 class="anchored" data-anchor-id="método-1.-bucle">Método 1. Bucle</h2>
<p>Lo más intuitivo para mí siempre ha sido un bucle. Que lo plantees directamente con un <code>for()</code>, con un <code>lapply()</code> más <code>rbind</code> y <code>do.call()</code> o con otro conjunto de herramientas es cosa tuya.</p>
<p>Me resulta directo <code>map_dfr()</code> de <strong>purrr</strong> porque lo que necesito al final es un data frame de todos los data frames intermedios apilados por filas.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">paths_a_ficheros <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(path_to_folder,</span>
<span id="cb7-2">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parquet$"</span>, </span>
<span id="cb7-3">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.time</span>(</span>
<span id="cb7-6">  df_all <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(paths_a_ficheros, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(.path) {</span>
<span id="cb7-7">    df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_parquet</span>(</span>
<span id="cb7-8">      .path,</span>
<span id="cb7-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_select =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pickup_datetime"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"airport_fee"</span>),</span>
<span id="cb7-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">as_data_frame =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb7-11">    )</span>
<span id="cb7-12">    </span>
<span id="cb7-13">    df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-14">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(airport_fee <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-15">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(pickup_datetime)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-16">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> day)</span>
<span id="cb7-17">    </span>
<span id="cb7-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gc()</span></span>
<span id="cb7-19">    </span>
<span id="cb7-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(df)</span>
<span id="cb7-21">  }) </span>
<span id="cb7-22">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   user  system elapsed 
 92.233  41.167 148.677 </code></pre>
</div>
</div>
<p>Ha tardado como un minuto, pero lo tengo.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df_all)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 2
  day        count
  &lt;date&gt;     &lt;int&gt;
1 2021-04-05  6548
2 2021-04-06  5664
3 2021-04-07  5343
4 2021-04-08  6054
5 2021-04-09  6069
6 2021-04-10  5157</code></pre>
</div>
</div>
<p>No he cargado en ningún momento todos los datos: he cargado solo lo que necesitaba de cada fichero y he operado con cada fichero por separado.</p>
<ul>
<li><code>col_select</code> te permite no leer todas las columnas sino solo las que incluyas en la selección. Los ficheros son grandes, así que ahorras tiempo y memoria si eliges previamente.</li>
<li><code>as_data_frame = TRUE</code> está diciendo a la función que cargue todo el data frame en memoria (o por lo menos la selección que hemos hecho). Si lo marcas como <code>FALSE</code> el resultado de la lectura será una tabla de arrow, y el cómputo que viene después no lo hará dplyr sino arrow, aunque luego tendrás que recuperar los datos con un <code>collect()</code>.</li>
</ul>
<section id="alternativa-en-el-bucle.-sin-selección-de-columnas" class="level3">
<h3 class="anchored" data-anchor-id="alternativa-en-el-bucle.-sin-selección-de-columnas">Alternativa en el bucle. Sin selección de columnas</h3>
<p>Siempre que sepas que te sobran columnas, elimínalas. Para que te hagas una idea, el siguiente código solo se diferencia del anterior en la selección de columnas… pues este no me tira. Se peta todo.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.time</span>(</span>
<span id="cb11-2">  df_all <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(paths_a_ficheros, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(.path) {</span>
<span id="cb11-3">    df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_parquet</span>(</span>
<span id="cb11-4">      .path,</span>
<span id="cb11-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">as_data_frame =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-6">    )</span>
<span id="cb11-7">    </span>
<span id="cb11-8">    df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb11-9">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(airport_fee <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb11-10">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(pickup_datetime)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-11">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> day)</span>
<span id="cb11-12">    </span>
<span id="cb11-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gc()</span></span>
<span id="cb11-14">    </span>
<span id="cb11-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(df)</span>
<span id="cb11-16">  }) </span>
<span id="cb11-17">)</span></code></pre></div>
</div>
</section>
<section id="alternativa-en-el-bucle.-tabla-arrow" class="level3">
<h3 class="anchored" data-anchor-id="alternativa-en-el-bucle.-tabla-arrow">Alternativa en el bucle. Tabla arrow</h3>
<p>Una opción es fijar <code>as_data_frame</code> a <code>FALSE</code> para trabajar con las tablas de arrow en lugar de data frame. Esto te será útil si cada fichero es a su vez muy grande. Pero tendrás de todos modos que usar <code>collect()</code> en cada iteración para que <code>map_dfr</code> pueda apilar los data frames. Esto hará que cada data frame (resultante de cada iteración) se vaya volcando en memoria.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.time</span>(</span>
<span id="cb12-2">  df_all <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(paths_a_ficheros, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(.path) {</span>
<span id="cb12-3">    df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_parquet</span>(</span>
<span id="cb12-4">      .path,</span>
<span id="cb12-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_select =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pickup_datetime"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"airport_fee"</span>),</span>
<span id="cb12-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">as_data_frame =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb12-7">    )</span>
<span id="cb12-8">    </span>
<span id="cb12-9">    df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-10">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(airport_fee <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-11">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(pickup_datetime)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-12">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> day)</span>
<span id="cb12-13">    </span>
<span id="cb12-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gc()</span></span>
<span id="cb12-15">    </span>
<span id="cb12-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collect</span>(df))</span>
<span id="cb12-17">  }) </span>
<span id="cb12-18">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   user  system elapsed 
 70.561  16.871  82.183 </code></pre>
</div>
</div>
</section>
</section>
<section id="método-2.-arrow" class="level2">
<h2 class="anchored" data-anchor-id="método-2.-arrow">Método 2. <code>arrow</code></h2>
<p>En lugar del bucle, si te vas a meter en <strong>arrow</strong>, le sacarás más partido si aprovechas todas sus herramientas.</p>
<p>Si tienes unos ficheros parquet en una carpeta, en lugar de leerlos uno a uno desde una mentalidad R, puedes dejar que <code>arrow</code> se encargue de la gestión en memoria con particiones de todos los ficheros en conjunto.</p>
<blockquote class="blockquote">
<p>Hay formas más recomendables de guardar los ficheros parquet para facilitar esta tarea a arrow, pero los dejo como están para este ejemplo porque me sirven así.</p>
</blockquote>
<p>Con <code>arrow::open_dataset()</code> cargo la información de los ficheros. Por ejemplo, debajo puedes ver los nombres y tipos de columnas de los ficheros:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">open_dataset</span>(path_to_folder)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>FileSystemDataset with 38 Parquet files
hvfhs_license_num: string
dispatching_base_num: string
originating_base_num: string
request_datetime: timestamp[us]
on_scene_datetime: timestamp[us]
pickup_datetime: timestamp[us]
dropoff_datetime: timestamp[us]
PULocationID: int64
DOLocationID: int64
trip_miles: double
trip_time: int64
base_passenger_fare: double
tolls: double
bcf: double
sales_tax: double
congestion_surcharge: double
airport_fee: double
tips: double
driver_pay: double
shared_request_flag: string
shared_match_flag: string
access_a_ride_flag: string
wav_request_flag: string
wav_match_flag: string

See $metadata for additional Schema metadata</code></pre>
</div>
</div>
<p>Y puedes trabajar ese resultado como si fuera un data frame de dplyr.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">open_dataset</span>(path_to_folder) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(airport_fee, pickup_datetime) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(airport_fee <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(pickup_datetime)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> day)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>FileSystemDataset (query)
day: date32[day]
count: int64

See $.data for the source Arrow object</code></pre>
</div>
</div>
<p>Con ese código no has ejecutado ninguna operación, por eso no tarda nada en ejercutarse. Lo que has hecho es preparar una operación con una sintaxis. Ahora falta materializarla, decirle a R que mande la orden y arrow la ejecutará. Para eso, necesitas <code>collect()</code>, pero la sintaxis de dplyr no cambia.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.time</span>(</span>
<span id="cb18-2">  df_all <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">open_dataset</span>(path_to_folder) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(airport_fee, pickup_datetime) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(airport_fee <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(pickup_datetime)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb18-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> day) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collect</span>()</span>
<span id="cb18-8">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   user  system elapsed 
 64.199  13.922  38.288 </code></pre>
</div>
</div>
<p>arrow se ha encargado de paralelizar la operación aprovechando los recursos y por eso tarda tan poco.</p>
<p>En tu caso no sé, pero si hubiera intentando yo pararelizar la operación con `<code>mcLapply</code> o cosas así seguramente habría petado el ordenador… porque habría intentado cargar en memoria más de lo que el ordenador puede.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df_all)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 2
  day        count
  &lt;date&gt;     &lt;int&gt;
1 2021-06-01 26302
2 2021-06-02 23917
3 2021-06-03 26256
4 2021-06-04 27644
5 2021-06-05 22020
6 2021-06-06 28681</code></pre>
</div>
</div>
</section>
<section id="método-3.-duckdb" class="level2">
<h2 class="anchored" data-anchor-id="método-3.-duckdb">Método 3. duckdb</h2>
<p>Otra herramienta en la que te puedes apoyar sin que tu sintaxis tidyverse se vea afectada en <strong>DuckDB</strong>, en colaboración con <strong>dbplyr</strong>, el backend de dplyr para bases de datos.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(duckdb)</span>
<span id="cb22-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb22-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># hive_partitioning = true</span></span>
<span id="cb22-4">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duckdb</span>())</span>
<span id="cb22-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.time</span>(</span>
<span id="cb22-6">  df_all <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tbl</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"read_parquet('../../data/taxiny/*.parquet')"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(airport_fee, pickup_datetime) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(airport_fee <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(pickup_datetime)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb22-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> day) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collect</span>()</span>
<span id="cb22-12">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   user  system elapsed 
 57.329   1.487  20.903 </code></pre>
</div>
</div>
<p>Se ha portado bien. En benchmarks más serios, con datos medianos funciona muy bien.</p>
<p>DuckDB además podrías trabajarla con SQL, lo que puede facilitar el trabajo en equipos grandes, en los que pocos miembros sabrán dplyr.</p>
</section>
<section id="comentarios-finales" class="level2">
<h2 class="anchored" data-anchor-id="comentarios-finales">Comentarios finales</h2>
<ul>
<li>Si gestionas bien las particiones de ficheros por variables, obtendrás incluso mejores resultados.</li>
<li>Recientemente ha salido <a href="https://github.com/duckdblabs/duckplyr">duckplyr</a>, para que el propio dplyr te contruya la infraestructura duckdb directamente. Pero según entiendo esto lo hace con data frames que ya tienes cargados en memoria. Recuerda que en este caso no tienes suficiente memoria.</li>
<li>Si te cabe en memoria, el clásico <code>data.table</code> de R sigue estando vigente, aunque muchos ojos se estén yendo a <em>polars</em> (<a href="https://h2oai.github.io/db-benchmark/">benchmark</a>)</li>
</ul>


</section>

 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-04-21-dataframes-inmemory/</guid>
  <pubDate>Sun, 21 Apr 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Relaciones espurias</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-03-18-correlation/</link>
  <description><![CDATA[ 




<p>Tienes un datos de divorcio en estados de Estados Unidos (<a href="https://xcelab.net/rm/statistical-rethinking/">fuente</a>).</p>
<p>Parece que hay correlación entre el ratio de divorcio por estado y la edad mediana a la que se casa la gente:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_light</span>())</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> MedianAgeMarriage, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Divorce)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-03-18-correlation/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>El ratio de divorcio por estado dada la mediana de edad de casarse podrías modelizarlo como:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AD_i%20%5Csim%20%5Ctext%7BNormal%7D(%5Cmu_i,%20%5Csigma)%0A%5C%5C%0A%5Cmu_i%20=%20%5Calpha%20+%20%5Cbeta_AA_i%0A%5C%5C%0A%5Calpha%20%5Csim%20%5Ctext%7BNormal(0,%200,2)%7D%0A%5C%5C%0A%5Cbeta_A%20%5Csim%20%5Ctext%7BNormal(0,%200,5)%7D%0A%5C%5C%0A%5Csigma%20%5Csim%20%5Ctext%7BExponential(1)%7D%0A"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?D_i"> el ratio de divorcio estandarizado (media 0, desviación típica 1) para el Estado <img src="https://latex.codecogs.com/png.latex?i">.</li>
<li><img src="https://latex.codecogs.com/png.latex?A_i"> es la edad mediana a la que se casa la gente en el Estado <img src="https://latex.codecogs.com/png.latex?i">.</li>
<li>Como el ratio que modelizamos está centrado en 0, el intercept del modelo es esperable que sea cercano a 0.</li>
<li>Sobre <img src="https://latex.codecogs.com/png.latex?%5Cbeta_A">, si fuera igual a 1, estaríamos diciendo que por cada cambio de una desviación estándar de la edad, observaríamos un cambio de una desviación estándar en el ratio del divorcio. La desviación estándar de la edad es 1.2436303, por lo que si <img src="https://latex.codecogs.com/png.latex?%5Cbeta_A%20=%201">, un cambio de <img src="https://latex.codecogs.com/png.latex?%7B1,2%7D"> años en la mediana de edad de casarse aumentaría el ratio de divorcio en una desviación estándar, lo que parece ser demasiado fuerte.</li>
</ul>
<p>Ahora podemos ajustar el modelo y simular:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">m5<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.1</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quap</span>(</span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alist</span>(</span>
<span id="cb2-3">    D <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(mu, sigma), </span>
<span id="cb2-4">    mu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> bA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> A, </span>
<span id="cb2-5">    a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), </span>
<span id="cb2-6">    bA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>), </span>
<span id="cb2-7">    sigma <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dexp</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-8">  ), </span>
<span id="cb2-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d</span>
<span id="cb2-10">)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb3-2">prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract.prior</span>(m5<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.1</span>)</span>
<span id="cb3-3">mu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">link</span>( m5<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.1</span> , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">post=</span>prior , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>( <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) ) )</span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>( <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span> , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) )</span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ( i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> ) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>( <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) , mu[i,] , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">col.alpha</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>) )</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-03-18-correlation/index_files/figure-html/extract-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>



 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-03-18-correlation/</guid>
  <pubDate>Mon, 18 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>¿Cómo surge la distribución normal?</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-02-24-normality/</link>
  <description><![CDATA[ 




<p>La distribución normal siempre me ha parecido demasiado perfecta para esperar verla en unos datos reales.</p>
<p>Pero claro, eso me pasa por no saber de dónde viene.</p>
<p>Te cuento.</p>
<p>Imagina un grupo de personas que parten de una línea. Cada uno lanza una moneda al aire; si sale cara, da un paso a la izquierda, de máximo 1 metro; si no, lo da a la derecha. Los pasos estarán entre 0 y 1 metro. Al cabo de 16 lanzamientos, ¿a qué distancia estará del origen?</p>
<p>Será la suma de las distancias de esos pasos.</p>
<p>Podemos calcular esto para 1000 personas.</p>
<p>Primero si dan 4 pasos:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">pos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(pos)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-02-24-normality/index_files/figure-html/pasos4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Ahora si dan 8 pasos:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">pos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(pos)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-02-24-normality/index_files/figure-html/pasos8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Ahora si dan 16:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">pos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(pos)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-02-24-normality/index_files/figure-html/pasos16-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Realmente, casi con cualquier distribución puedes hacer esto. La suma de valores de cualquier distribución seguirá una distribución normal (con algunas necesitarás una muestra más grande que con otras).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rpois</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-02-24-normality/index_files/figure-html/suma-pois-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<section id="ejemplo-de-modelo-basado-en-la-normalidad" class="level2">
<h2 class="anchored" data-anchor-id="ejemplo-de-modelo-basado-en-la-normalidad">Ejemplo de modelo basado en la normalidad</h2>
<p>La altura de varias personas adultas es esperable que se distribuya como una distribución normal.</p>
<p>La idea intuitiva es que la altura de una persona adulta es el resultado de muchos pequeños aumentos que se suman. Para distintos individuos, estas sumas darán resultados distintos, porque los aumentos progresivos entre ellos serán distintos al cabo de los años. Pero el conjunto de todas ellas será normal, si has esperado suficientes años para que los casos más altos (aumentos más grandes acumulados) se compensen con los más bajos (aumentos más pequeños).</p>
<p>Vamos a trabajar con una muestra de personas, de las que conocemos su altura.</p>
<p>Queremos modelizar la altura como una distribución normal, o sea, estimaremos la media y desviación típica.</p>
<p>El método bayesiano considerará todas las medias y desviaciones típicas posibles (realmente haremos una aproximación), y evaluaremos cada una en función de cómo de plausibles son, dados los datos que tenemos.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rethinking)</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(Howell1)</span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(Howell1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   height   weight age male
1 151.765 47.82561  63    1
2 139.700 36.48581  63    0
3 136.525 31.86484  65    0
4 156.845 53.04191  41    1
5 145.415 41.27687  51    0
6 163.830 62.99259  35    1</code></pre>
</div>
</div>
<p>Por ahora, vamos a centrarnos solo en los casos adultos, porque la altura de los niños no se distribuye normalmente, sino que está correlada con la edad.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">adultos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Howell1[Howell1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, ]</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(adultos<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>height, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800080"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-02-24-normality/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Queremos modelizar la altura <img src="https://latex.codecogs.com/png.latex?h_i"> de cada individuo <img src="https://latex.codecogs.com/png.latex?i"> como <img src="https://latex.codecogs.com/png.latex?h_i%20%5Csim%20%5Ccal%7BN%7D(%5Cmu,%20%5Csigma)">. <strong>El objetivo es estimar</strong> <img src="https://latex.codecogs.com/png.latex?%5Cmu"> y <img src="https://latex.codecogs.com/png.latex?%5Csigma">.</p>
<p>Como estamos en un modelo bayesiano, necesitamos unos prioris para ambos parámetros. Los prioris son distribuciones de estos parámetros que consideramos razonables.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ah_i%20%5Csim%20%5Ccal%7BN%7D(%5Cmu,%20%5Csigma)%0A%5C%5C%0A%5Cmu%20%5Csim%20%5Ccal%7BN%7D(178,%2020)%0A%5C%5C%0A%5Csigma%20%5Csim%20%5Ccal%7BU%7D(0,%2050)%0A"></p>
<p>Estamos dando como distribución a priori de la media una normal centrada en <img src="https://latex.codecogs.com/png.latex?%5Ccal%7B178%7D"> y con un rango de <img src="https://latex.codecogs.com/png.latex?%5Ccal%7B40%7D">cm con una probablidad de 95%.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">curve</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">178</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800080"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-02-24-normality/index_files/figure-html/howell1-priori-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>La priori sobre la desviación típica es plana, en el sentido de que no sabemos dar más importancia a unos valores frente a otros, dentro los propuestos en el intervalo de la uniforme.</p>
<p>Podemos simular cómo serían unos datos a partir de estas prioris.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">sample_mu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">178</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb9-2">sample_sigma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb9-3"></span>
<span id="cb9-4">prior_h <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>, sample_mu, sample_sigma)</span>
<span id="cb9-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(prior_h, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800080"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-02-24-normality/index_files/figure-html/simulacion-prioris-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Lo que hemos hecho es simular 10.000 pares de <img src="https://latex.codecogs.com/png.latex?%5Cmu"> y <img src="https://latex.codecogs.com/png.latex?%5Csigma"> y para cada par hemos simulado una altura. Así tenemos 10.000 alturas, cada una originada a partir de una población normal distinta (pero todas las poblaciones normales son tan plausibles como indica nuestra priori).</p>
<p>Si cambiáramos la priori, la simulación a priori de la altura se vería afectada:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">sample_mu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">178</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb10-2"></span>
<span id="cb10-3">prior_h <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>, sample_mu, sample_sigma)</span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(prior_h, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800080"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-02-24-normality/index_files/figure-html/simulacion-prioris2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Esa es una priori menos informativa, con una media mucho más dispersa. Pero puedes ver que las alturas que derivarían de unas prioris así no son realistas, dado que hay casos de altura negativa o también demasiado altos.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">fit_altura <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quap</span>( </span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alist</span>(</span>
<span id="cb11-3">    height <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>( mu , sigma ) ,</span>
<span id="cb11-4">    mu <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>( <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">178</span> , <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> ) ,</span>
<span id="cb11-5">    sigma <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dunif</span>( <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> , <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> )</span>
<span id="cb11-6">  ), </span>
<span id="cb11-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> adultos</span>
<span id="cb11-8">)</span>
<span id="cb11-9"></span>
<span id="cb11-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">precis</span>(fit_altura)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            mean        sd       5.5%      94.5%
mu    154.654539 0.4172190 153.987743 155.321336
sigma   7.762397 0.2950864   7.290792   8.234002</code></pre>
</div>
</div>
<p>Obtenemos un modelo normal con una media cuya media es 154 y su desviación típica es 0.42. Sí, el resultado de para la media de de la población es una distribución: no conocemos el valor exacto de la media sino que hemos estimado la distribución a la que pertenece.</p>
<p>Lo mismo con la desviación típica.</p>
<p>Concretamente, esta distribución de la <strong>media</strong> es la que muestra este histograma.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">posterior_h <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract.samples</span>(fit_altura, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>)</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(posterior_h<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mu, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800080"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-02-24-normality/index_files/figure-html/altura-posteriori-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<section id="ajuste-de-prioris" class="level3">
<h3 class="anchored" data-anchor-id="ajuste-de-prioris">Ajuste de prioris</h3>
<p>La priori no informativa que sugerimos antes no tenía sentido porque daba lugar a valores de alturas inhumanas, como negativos o demasiados altos.</p>
<p>Podemos proponer también una priori más restrictica.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">sample_mu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">178</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb14-2"></span>
<span id="cb14-3">prior_h <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>, sample_mu, sample_sigma)</span>
<span id="cb14-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(prior_h, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800080"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-02-24-normality/index_files/figure-html/prioris-ajustadas-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Esta priori fuerza a la media a quedarse mucho más centrada en la media propuesta. Y esto cambia el modelo.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">fit_altura2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quap</span>(</span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alist</span>(</span>
<span id="cb15-3">    height <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(mu, sigma), </span>
<span id="cb15-4">    mu <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">178</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>), </span>
<span id="cb15-5">    sigma <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dunif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb15-6">  ), </span>
<span id="cb15-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> adultos</span>
<span id="cb15-8">)</span>
<span id="cb15-9"></span>
<span id="cb15-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">precis</span>(fit_altura2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>           mean        sd      5.5%     94.5%
mu    177.86598 0.1002314 177.70579 178.02617
sigma  24.48463 0.9356079  22.98935  25.97991</code></pre>
</div>
</div>
<p>La media <img src="https://latex.codecogs.com/png.latex?%5Cmu"> apenas se ha movido del prior ahora. Sin embargo, el valor de <img src="https://latex.codecogs.com/png.latex?%5Csigma"> ha cambiado mucho porque el modelo lo calcula condicionada a la restricción del otro parámetro.</p>


</section>
</section>

 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-02-24-normality/</guid>
  <pubDate>Sat, 24 Feb 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Statistical Rethinking (2)</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2024-01-24-rethinking-2/</link>
  <description><![CDATA[ 




<section id="por-qué-lo-normal-es-normal" class="level2">
<h2 class="anchored" data-anchor-id="por-qué-lo-normal-es-normal">Por qué lo normal es normal</h2>
<section id="normal-por-adición" class="level3">
<h3 class="anchored" data-anchor-id="normal-por-adición">Normal por adición</h3>
<p>Hay un experimento en el que pones a unas personas en línea con una moneda. Cada persona tiene una moneda que lanza 16 veces.</p>
<p>Por cada vez que sale cara, da un paso a la derecha; por cada vez que sale cruz, a la izquierda.</p>
<p>Cada paso será de una distancia aleatoria entre 0 y 1 metro. ¿Cuántos metros se ha desplazado cada persona con respecto al origen?</p>
<p>El experimento con una sola persona sería algo así:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">distancia_por_paso <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(distancia_por_paso)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2.171815</code></pre>
</div>
</div>
<p>Nuestro sujeto ha recorrido 2.1718148 desde la línea.</p>
<p>Lo podemos extrapolar a 10000 sujetos:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">pos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>())</span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> pos), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800080"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2024-01-24-rethinking-2/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2024-01-24-rethinking-2/</guid>
  <pubDate>Wed, 24 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>¿Cómo se usan las prioris conjugadas?</title>
  <dc:creator>Leonardo Hansa</dc:creator>
  <link>https://lhansa.github.io/posts/2023-12-31-conjugate-prior/</link>
  <description><![CDATA[ 




<p>En estadística bayesiana, cuando buscas estimar un parámetro, lo que vas a obtener es una distribución de este parámetro. O sea, no obtienes un valor preciso, sino unas probabilidades asociadas a varios valores, de forma que algunos serán más probables que otros.</p>
<p>Un método intuitivo de conseguir esta distribución es usar el método del mallado ( <em>grid approximation</em> ). Con este método, relacionas todos los casos posibles, calculas una verosimilitud para cada caso, y lo multiplicas por una probabilidad a priori que decidas. Ese producto es la distribución que buscas para tu parámetro, la posteriori.</p>
<p>En algunas situaciones, usar una priori en concreto te puede simplificar luego el cálculo, ya que no te hará falta aplicar los cálculos del mallado: puedes, pero el resultado será el mismo.</p>
<section id="prioris-conjugados" class="level2">
<h2 class="anchored" data-anchor-id="prioris-conjugados">Prioris conjugados</h2>
<p>En el caso de lanzar una moneda, estás trabajando con una binomial: tienes ciertos éxitos ante un número posible de casos.</p>
<p>Si en este caso, usas como priori la distribución beta, entonces surgirá la magia.</p>
<p>La distribución es</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">monedas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb1-2">caras <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, monedas, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-3">p_cara <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)</span>
<span id="cb1-4">sample_size <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb1-5"></span>
<span id="cb1-6">beta_alpha <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-7">beta_beta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbeta</span>(sample_size, beta_alpha, beta_beta), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800080"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2023-12-31-conjugate-prior/index_files/figure-html/setup-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand.grid</span>(caras, p_cara))</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(df) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caras"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p_cara"</span>)</span></code></pre></div>
</div>
<p>Y podemos simular la posteriori con el método del mallado:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbeta</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p_cara, beta_alpha, beta_beta)</span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># df$prior &lt;- dunif(df$p_cara)</span></span>
<span id="cb3-3"></span>
<span id="cb3-4">df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>likelihood <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbinom</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras, monedas, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p_cara)</span>
<span id="cb3-5"></span>
<span id="cb3-6">df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>posteriori <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>likelihood <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>prior</span>
<span id="cb3-7">df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>std_posteriori <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>posteriori <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>posteriori)</span>
<span id="cb3-8"></span>
<span id="cb3-9"></span>
<span id="cb3-10">caras_observadas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span></span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p_cara[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas], </span>
<span id="cb3-12">     df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>posteriori[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>posteriori[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas]), </span>
<span id="cb3-13">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probabilidad de cara"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probabilidad"</span>)</span>
<span id="cb3-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p_cara[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas], </span>
<span id="cb3-15">      df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>prior[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>prior[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas]), </span>
<span id="cb3-16">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2023-12-31-conjugate-prior/index_files/figure-html/posterior1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>La magia está en que, dado que la distribución a priori es una beta, no necesitamos simular la posteriori, sino que sabemos que ya seguirá una distribución en concreto (una beta también, con pequeños cambios en sus parámetros);</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">posteriori_simulation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbeta</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p_cara[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas], </span>
<span id="cb4-2">                               beta_alpha <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> caras_observadas, </span>
<span id="cb4-3">                               beta_beta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> monedas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> caras_observadas)</span>
<span id="cb4-4"></span>
<span id="cb4-5">posteriori_simulation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> posteriori_simulation <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(posteriori_simulation)</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p_cara[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas], </span>
<span id="cb4-8">     df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>posteriori[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>posteriori[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas]), </span>
<span id="cb4-9">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probabilidad de cara"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probabilidad"</span>)</span>
<span id="cb4-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p_cara[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas], </span>
<span id="cb4-11">      df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>prior[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>prior[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas]), </span>
<span id="cb4-12">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb4-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p_cara[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>caras <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> caras_observadas], </span>
<span id="cb4-14">      posteriori_simulation, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lhansa.github.io/posts/2023-12-31-conjugate-prior/index_files/figure-html/posteriori-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>datos</category>
  <guid>https://lhansa.github.io/posts/2023-12-31-conjugate-prior/</guid>
  <pubDate>Sun, 31 Dec 2023 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
